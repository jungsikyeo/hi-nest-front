[{"/Users/yjs/Documents/GitHub/hi-nest-front/src/index.tsx":"1","/Users/yjs/Documents/GitHub/hi-nest-front/src/reportWebVitals.ts":"2","/Users/yjs/Documents/GitHub/hi-nest-front/src/App.tsx":"3","/Users/yjs/Documents/GitHub/hi-nest-front/src/apollo.ts":"4","/Users/yjs/Documents/GitHub/hi-nest-front/src/constants.ts":"5","/Users/yjs/Documents/GitHub/hi-nest-front/src/routers/logged-out-router.tsx":"6","/Users/yjs/Documents/GitHub/hi-nest-front/src/routers/logged-in-router.tsx":"7","/Users/yjs/Documents/GitHub/hi-nest-front/src/hooks/useMe.tsx":"8","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/create-account.tsx":"9","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/home.tsx":"10","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/logout.tsx":"11","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/login.tsx":"12","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/listener/listener-home.tsx":"13","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/404.tsx":"14","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/host/host-home.tsx":"15","/Users/yjs/Documents/GitHub/hi-nest-front/src/fragments.ts":"16","/Users/yjs/Documents/GitHub/hi-nest-front/src/components/form-error.tsx":"17","/Users/yjs/Documents/GitHub/hi-nest-front/src/components/button.tsx":"18","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/header.tsx":"19","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/footer.tsx":"20","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/host/my-podcasts.tsx":"21","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/host/detail-podcast.tsx":"22","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/search.tsx":"23","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/host/podcast.tsx":"24","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/host/edit-podcast.tsx":"25","/Users/yjs/Documents/GitHub/hi-nest-front/src/__generated__/globalTypes.ts":"26","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/listener/my-subscriptions.tsx":"27","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/listener/detail-subscription.tsx":"28","/Users/yjs/Documents/GitHub/hi-nest-front/src/components/episodes.tsx":"29","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/my-profile.tsx":"30"},{"size":725,"mtime":1612365860221,"results":"31","hashOfConfig":"32"},{"size":440,"mtime":1612365860224,"results":"33","hashOfConfig":"32"},{"size":366,"mtime":1612365860216,"results":"34","hashOfConfig":"32"},{"size":1918,"mtime":1613305921501,"results":"35","hashOfConfig":"32"},{"size":33,"mtime":1612365860220,"results":"36","hashOfConfig":"32"},{"size":841,"mtime":1612916984360,"results":"37","hashOfConfig":"32"},{"size":2139,"mtime":1613300980336,"results":"38","hashOfConfig":"32"},{"size":266,"mtime":1612365860220,"results":"39","hashOfConfig":"32"},{"size":5359,"mtime":1612916984357,"results":"40","hashOfConfig":"32"},{"size":2511,"mtime":1613279205743,"results":"41","hashOfConfig":"32"},{"size":585,"mtime":1612916984358,"results":"42","hashOfConfig":"32"},{"size":4877,"mtime":1612916984358,"results":"43","hashOfConfig":"32"},{"size":4639,"mtime":1613303457519,"results":"44","hashOfConfig":"32"},{"size":1680,"mtime":1613240010455,"results":"45","hashOfConfig":"32"},{"size":6418,"mtime":1613299013747,"results":"46","hashOfConfig":"32"},{"size":238,"mtime":1613122052857,"results":"47","hashOfConfig":"32"},{"size":229,"mtime":1612365860220,"results":"48","hashOfConfig":"32"},{"size":692,"mtime":1613244325236,"results":"49","hashOfConfig":"32"},{"size":5305,"mtime":1613240010445,"results":"50","hashOfConfig":"32"},{"size":4044,"mtime":1613278740452,"results":"51","hashOfConfig":"32"},{"size":1211,"mtime":1613299115436,"results":"52","hashOfConfig":"32"},{"size":2828,"mtime":1613301482052,"results":"53","hashOfConfig":"32"},{"size":3653,"mtime":1613300861007,"results":"54","hashOfConfig":"32"},{"size":914,"mtime":1613291011334,"results":"55","hashOfConfig":"32"},{"size":8276,"mtime":1613300611985,"results":"56","hashOfConfig":"32"},{"size":994,"mtime":1613284666224,"results":"57","hashOfConfig":"32"},{"size":1210,"mtime":1613300785252,"results":"58","hashOfConfig":"32"},{"size":2410,"mtime":1613302331279,"results":"59","hashOfConfig":"32"},{"size":1327,"mtime":1613301481987,"results":"60","hashOfConfig":"32"},{"size":1386,"mtime":1613303825412,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1tmgdp",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"64"},"/Users/yjs/Documents/GitHub/hi-nest-front/src/index.tsx",[],["133","134"],"/Users/yjs/Documents/GitHub/hi-nest-front/src/reportWebVitals.ts",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/App.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/apollo.ts",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/constants.ts",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/routers/logged-out-router.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/routers/logged-in-router.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/hooks/useMe.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/create-account.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/home.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/logout.tsx",["135"],"import { useApolloClient } from \"@apollo/client\";\nimport React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeLogout } from \"../../apollo\";\n\nexport const Logout = () => {\n  const history = useHistory();\n  const client = useApolloClient();\n\n  useEffect(() => {\n    client.cache.reset().then(async () => {\n      await makeLogout();\n    });\n\n    history.push(\"/\");\n  }, []);\n\n  return (\n    <div className=\"h-screen flex justify-center items-center\">\n      <span className=\"font-medium text-xl tracking-wide\">Loading...</span>\n    </div>\n  );\n};\n","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/login.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/listener/listener-home.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/404.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/host/host-home.tsx",["136","137"],"import React, { useState } from \"react\";\nimport { faHome, faSearch, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Helmet } from \"react-helmet-async\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport spotifyLogoWhite from \"../../images/spotify_logo_white.svg\";\nimport { Search } from \"../common/search\";\nimport { MyPodcasts } from \"./my-podcasts\";\nimport { gql, useMutation, useQuery } from \"@apollo/client\";\nimport { PODCAST_FRAGMENT } from \"../../fragments\";\nimport { DetailPodcast } from \"./detail-podcast\";\nimport {\n  createPodcastMutation,\n  createPodcastMutationVariables,\n} from \"../../__generated__/createPodcastMutation\";\nimport { MySubscriptions } from \"../listener/my-subscriptions\";\n\nexport interface IUpdatePodcastForm {\n  id: number;\n  title: string;\n  category: string;\n  description?: string;\n}\n\nexport const PODCAST_QUERY = gql`\n  query PodcastQuery {\n    myPodcasts {\n      ok\n      error\n      podcasts {\n        ...PodcastParts\n      }\n    }\n  }\n  ${PODCAST_FRAGMENT}\n`;\nconst CREATE_PODCAST_MUTATION = gql`\n  mutation createPodcastMutation($createPodcastInput: CreatePodcastInput!) {\n    createPodcast(input: $createPodcastInput) {\n      error\n      ok\n      id\n    }\n  }\n`;\n\nexport const HostHome = () => {\n  let { data: podcasts } = useQuery(PODCAST_QUERY);\n  const location = useLocation();\n  const [, path, paramId] = location.pathname.split(\"/\");\n  const [searchText, setSearchText] = useState(\"\");\n\n  const history = useHistory();\n  const onCompleted = (data: createPodcastMutation) => {\n    const {\n      createPodcast: { ok, id },\n    } = data;\n    if (ok) {\n      setTimeout(() => {\n        history.push(`/podcasts/${id}`);\n      }, 1500);\n    }\n  };\n  const [createPodcastMutation, { loading }] = useMutation<\n    createPodcastMutation,\n    createPodcastMutationVariables\n  >(CREATE_PODCAST_MUTATION, {\n    onCompleted,\n    refetchQueries: [{ query: PODCAST_QUERY }],\n  });\n\n  const onCreatePodcast = () => {\n    if (!loading) {\n      const index = podcasts?.myPodcasts?.podcasts?.length + 1;\n      const title = `내 플레이리스트 #${index}`;\n      const category = `미분류`;\n      const description = null;\n\n      createPodcastMutation({\n        variables: {\n          createPodcastInput: { title, category, description },\n        },\n      });\n    }\n  };\n\n  return (\n    <div className=\"bg-gradient-to-br from-gray-900 to-black text-gray-500\">\n      <Helmet>\n        <title>Host | Podcast</title>\n      </Helmet>\n      <div className=\"flex flex-col min-h-screen\">\n        <div className=\"flex\" style={{ minHeight: \"calc(100vh - 80px)\" }}>\n          <div\n            id=\"left\"\n            className=\"bg-black text-gray-500\"\n            style={{ width: \"230px\", minHeight: \"calc(100vh - 80px)\" }}\n          >\n            <div style={{ height: \"260px\" }}>\n              <div className=\"pl-5 py-5\">\n                <Link to=\"/\">\n                  <img src={spotifyLogoWhite} className=\"w-32\" alt=\"Spotify\" />\n                </Link>\n              </div>\n              <div className=\"w-full\">\n                <Link\n                  to=\"/\"\n                  className={`flex items-center hover:text-white mx-2 py-1 rounded-md ${\n                    location.pathname === \"/\" && \"bg-gray-800 text-white\"\n                  }`}\n                >\n                  <span className=\"text-2xl px-3\">\n                    <FontAwesomeIcon icon={faHome} />\n                  </span>\n                  <span className=\"text-sm\">홈</span>\n                </Link>\n              </div>\n              <div className=\"w-full\">\n                <Link\n                  to=\"/search\"\n                  className={`flex items-center hover:text-white mx-2 py-1 rounded-md ${\n                    location.pathname === \"/search\" && \"bg-gray-800 text-white\"\n                  }`}\n                >\n                  <span className=\"text-2xl px-3\">\n                    <FontAwesomeIcon icon={faSearch} />\n                  </span>\n                  <span className=\"text-sm\">검색하기</span>\n                </Link>\n              </div>\n              <div className=\"mx-5 py-3\">\n                <span className=\"font-bold text-xs text-white text-opacity-50 tracking-wider\">\n                  플레이리스트\n                </span>\n              </div>\n              <a\n                onClick={onCreatePodcast}\n                className=\"flex items-center hover:text-white cursor-pointer mx-5 pb-3 mb-3 border-b border-solid border-gray-500 border-opacity-40\"\n              >\n                <span className=\"mr-3 bg-gray-100 bg-opacity-30 w-7 h-7 rounded-sm flex items-center justify-center\">\n                  <FontAwesomeIcon icon={faPlus} className=\"text-black\" />\n                </span>\n                <span className=\"text-sm\">플레이리스트 만들기</span>\n              </a>\n            </div>\n            <div\n              className=\"overflow-y-scroll\"\n              style={{ maxHeight: \"calc(100vh - 340px)\" }}\n            >\n              <ul className=\"text-sm px-5\">\n                {podcasts?.myPodcasts.podcasts?.map((podcast: any) => (\n                  <li className=\"hover:text-white tracking-wider pb-3 overflow-x-hidden overflow-ellipsis whitespace-nowrap\">\n                    <Link to={`/podcasts/${podcast.id}`} key={podcast.id}>\n                      {podcast.title}\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n          <div style={{ width: \"calc(100vw - 230px)\" }}>\n            <div\n              className=\"w-full flex text-white px-10 bg-gray-900 bg-opacity-95\"\n              style={{ height: \"60px\" }}\n            >\n              <Search handleOnchange={setSearchText} />\n            </div>\n            <div\n              className=\"w-full overflow-y-auto bg-gray-900 bg-opacity-90\"\n              style={{ height: \"200px\", minHeight: \"calc(100vh - 140px)\" }}\n            >\n              {path === \"podcasts\" ? (\n                <DetailPodcast data={{ podcasts, paramId }} />\n              ) : (\n                <MyPodcasts data={podcasts} text={searchText} />\n              )}\n            </div>\n          </div>\n        </div>\n        <footer className=\"bg-blue-500 text-white\" style={{ height: \"80px\" }}>\n          player\n        </footer>\n      </div>\n    </div>\n  );\n};\n","/Users/yjs/Documents/GitHub/hi-nest-front/src/fragments.ts",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/components/form-error.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/components/button.tsx",["138","139"],"import React from \"react\";\n\ninterface IButtonProps {\n  canClick: boolean;\n  loading: boolean;\n  actionText: string;\n}\n\nexport const Button: React.FC<IButtonProps> = ({\n  canClick,\n  loading,\n  actionText,\n}) => (\n  <button\n    className={`w-full text-sm font-sm focus:outline-none text-white py-3 rounded-3xl transition-colors ${\n      canClick\n        ? actionText == \"삭제하기\"\n          ? \"bg-red-500 hover:bg-red-400\"\n          : \"bg-green-500 hover:bg-green-400\"\n        : actionText == \"삭제하기\"\n        ? \"bg-red-600 bg-opacity-80 hover:bg-red-400\"\n        : \"bg-green-600 bg-opacity-80 hover:bg-green-400\"\n    }`}\n  >\n    {loading ? \"Loading...\" : actionText}\n  </button>\n);\n","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/header.tsx",["140","141"],"import {\n  faUser,\n  faBars,\n  faTimes,\n  faSignOutAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMe } from \"../../hooks/useMe\";\nimport spotifyLogoWhite from \"../../images/spotify_logo_white.svg\";\n\nexport const Header: React.FC = () => {\n  const { data } = useMe();\n  const [editing, setEditing] = useState(false);\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  return (\n    <header className=\"bg-black\">\n      <div className=\"w-full px-3 py-2 xl:px-0 max-w-screen-xl mx-auto flex justify-between items-center\">\n        <Link to=\"/\">\n          <div className=\"text-sm flex items-center\">\n            <img\n              src={spotifyLogoWhite}\n              className=\"w-20 md:w-40\"\n              alt=\"Spotify\"\n            />\n          </div>\n        </Link>\n        <div className=\"flex\">\n          {data?.me ? (\n            <div className=\"flex flex-row justify-between\">\n              <div className=\"text-xs pr-3 flex items-center\">\n                <Link to=\"/my-profile\" className=\"hover:text-green-500\">\n                  <div className=\"w-full p-2 rounded-3xl border-2 border-white\">\n                    <FontAwesomeIcon\n                      icon={faUser}\n                      className=\"text-sm text-white\"\n                    />\n                  </div>\n                </Link>\n              </div>\n              <div className=\"w-full p-2 text-white hidden md:block\">\n                <Link\n                  to=\"/logout\"\n                  className=\"flex items-center hover:text-green-500\"\n                >\n                  <FontAwesomeIcon icon={faSignOutAlt} className=\"text-2xl\" />\n                  <span className=\"\">로그아웃</span>\n                </Link>\n              </div>\n            </div>\n          ) : (\n            <div className=\"hidden md:block text-white font-bold\">\n              <span className=\"pr-8\">\n                <Link to=\"/create-account\" className=\"hover:text-green-500\">\n                  가입하기\n                </Link>\n              </span>\n              <span className=\"pr-8\">\n                <Link to=\"/login\" className=\"hover:text-green-500\">\n                  로그인하기\n                </Link>\n              </span>\n            </div>\n          )}\n          <span className=\"w-full p-2 md:hidden\">\n            <a onClick={toggleEditing} className=\"cursor-pointer\">\n              <FontAwesomeIcon\n                icon={faBars}\n                className=\"text-2xl text-white hover:text-green-500\"\n              />\n            </a>\n          </span>\n        </div>\n        {editing ? (\n          <div className=\"flex absolute left-full md:hidden\">\n            <div className=\"left-0 bg-black w-screen h-screen fixed top-0 opacity-50 z-40\">\n              {\"\"}\n            </div>\n            <nav className=\"flex flex-col justify-between right-0 bg-black border-0 m-0 p-8 h-screen fixed top-0 w-80 z-40 text-white font-bold\">\n              <div className=\"flex flex-row justify-between\">\n                <ul>\n                  <li className=\"text-3xl pb-6\">\n                    {!data?.me ? (\n                      <Link\n                        to=\"/create-account\"\n                        onClick={toggleEditing}\n                        className=\"hover:text-green-500\"\n                      >\n                        가입하기\n                      </Link>\n                    ) : (\n                      <Link\n                        to=\"/my-profile\"\n                        onClick={toggleEditing}\n                        className=\"hover:text-green-500\"\n                      >\n                        계정\n                      </Link>\n                    )}\n                  </li>\n                  <li className=\"text-3xl pb-6\">\n                    {!data?.me ? (\n                      <Link\n                        to=\"/login\"\n                        onClick={toggleEditing}\n                        className=\"hover:text-green-500\"\n                      >\n                        로그인하기\n                      </Link>\n                    ) : (\n                      <Link\n                        to=\"/logout\"\n                        onClick={toggleEditing}\n                        className=\"hover:text-green-500\"\n                      >\n                        로그아웃하기\n                      </Link>\n                    )}\n                  </li>\n                </ul>\n                <span>\n                  <a\n                    type=\"button\"\n                    onClick={toggleEditing}\n                    className=\"text-white z-50 cursor-pointer\"\n                  >\n                    <FontAwesomeIcon\n                      icon={faTimes}\n                      className=\"text-2xl text-white hover:text-green-500\"\n                    />\n                  </a>\n                </span>\n              </div>\n              <Link to=\"/\">\n                <div className=\"text-sm flex items-center\">\n                  <img src={spotifyLogoWhite} className=\"w-20\" alt=\"Spotify\" />\n                </div>\n              </Link>\n            </nav>\n          </div>\n        ) : (\n          ``\n        )}\n      </div>\n    </header>\n  );\n};\n","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/footer.tsx",["142","143"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport spotifyLogoWhite from \"../../images/spotify_logo_white.svg\";\nimport instagramIcon from \"../../images/instagram_icon.svg\";\nimport facebookIcon from \"../../images/facebook_icon.svg\";\n\nexport const Footer: React.FC = () => {\n  const detailInfo = () => {\n    alert(\"비밀~ ^.^;\");\n  };\n  const recruitInfo = () => {\n    alert(\"힝 속았지~? ^.~\");\n  };\n  return (\n    <footer className=\"bg-black xl:w-full\">\n      <div className=\"w-full px-3 py-16 xl:px-0 flex flex-col items-start sm:flex-col sm:items-start lg:flex-row lg:justify-around\">\n        <Link to=\"/\" className=\"mb-12 md:px-20\">\n          <div className=\"text-sm flex items-center\">\n            <img\n              src={spotifyLogoWhite}\n              className=\"w-20 lg:w-48\"\n              alt=\"Spotify\"\n            />\n          </div>\n        </Link>\n        <div className=\"flex flex-col md:px-20 md:w-full md:flex-row md:justify-between\">\n          <div className=\"text-white flex flex-col items-start mb-12\">\n            <span className=\"text-gray-500 text-xs font-bold\">회사</span>\n            <span className=\"pt-3 text-sm font-bold\">\n              <a onClick={detailInfo} className=\"cursor-pointer\">\n                상세정보\n              </a>\n            </span>\n            <span className=\"pt-3 text-sm font-bold\">\n              <a onClick={recruitInfo} className=\"cursor-pointer\">\n                채용정보\n              </a>\n            </span>\n          </div>\n          <div className=\"text-white flex flex-col items-start mb-12\">\n            <span className=\"text-gray-500 text-xs font-bold\">커뮤니티</span>\n            <span className=\"pt-3 text-sm font-bold\">\n              <a href=\"https://nomadcoders.co/users/mdotcom12\">개발자</a>\n            </span>\n            <span className=\"pt-3 text-sm font-bold\">\n              <a href=\"https://nomadcoders.co/users/mdotcom12\">투자자</a>\n            </span>\n            <span className=\"pt-3 text-sm font-bold\">\n              <a href=\"https://nomadcoders.co/users/serranoarevalo\">공급업체</a>\n            </span>\n          </div>\n          <div className=\"text-white flex flex-col items-start mb-12\">\n            <span className=\"text-gray-500 text-xs font-bold\">\n              노마드코더 링크\n            </span>\n            <span className=\"pt-3 text-sm font-bold\">\n              <a href=\"https://nomadcoders.co/courses\">코스</a>\n            </span>\n            <span className=\"pt-3 text-sm font-bold\">\n              <a href=\"https://nomadcoders.co/challenges\">챌린지</a>\n            </span>\n            <span className=\"pt-3 text-sm font-bold\">\n              <a href=\"https://nomadcoders.co/community\">수다방</a>\n            </span>\n            <span className=\"pt-3 text-sm font-bold\">\n              <a href=\"https://nomadcoders.co/faq\">FAQ</a>\n            </span>\n            <span className=\"pt-3 text-sm font-bold\">\n              <a href=\"https://nomadcoders.co/roadmap\">로드맵</a>\n            </span>\n          </div>\n        </div>\n        <ul className=\"flex flex-row justify-start md:px-20\">\n          <li className=\"mr-3\">\n            <a\n              href=\"https://instagram.com/1985yjs\"\n              className=\"rounded-3xl bg-gray-800 w-10 h-10 inline-flex items-center justify-center\"\n              title=\"Instagram\"\n            >\n              <img\n                src={instagramIcon}\n                className=\"w-5 h-5 bg-white\"\n                alt=\"instagram\"\n              />\n            </a>\n          </li>\n          <li className=\"mr-3\">\n            <a\n              href=\"https://facebook.com/jeongsik.yeo/\"\n              className=\"rounded-3xl bg-gray-800 w-10 h-10 inline-flex items-center justify-center\"\n              title=\"Facebook\"\n            >\n              <img\n                src={facebookIcon}\n                className=\"w-5 h-5 bg-white\"\n                alt=\"facebook\"\n              />\n            </a>\n          </li>\n        </ul>\n      </div>\n    </footer>\n  );\n};\n","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/host/my-podcasts.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/host/detail-podcast.tsx",["144"],"import React from \"react\";\nimport podcastDefault from \"../../images/podcast_default.svg\";\nimport { useState } from \"react\";\nimport { Episodes } from \"../../components/episodes\";\nimport { EditPodcast } from \"./edit-podcast\";\n\ninterface IPodcast {\n  id: number;\n  title: string;\n  category: string;\n  description: string;\n  episodes: any;\n}\n\nexport const DetailPodcast = (props: any) => {\n  const podcast: IPodcast = props.data.podcasts?.myPodcasts.podcasts.find(\n    (podcast: IPodcast) => podcast.id === +props.data.paramId\n  );\n\n  const [editBoxState, setEditBoxState] = useState(false);\n  const onEditBoxClick = () =>\n    setEditBoxState((editBoxState) => (editBoxState = !editBoxState));\n\n  return (\n    <div className=\"w-full py-5 px-10\" style={{minWidth: \"500px\"}}>\n      <div className=\"w-full h-52 flex items-end\">\n        <div className=\"mb-5 mr-5 flex items-end shadow-2xl\">\n          <img\n            src={podcastDefault}\n            className=\"bg-gray-700\"\n            style={{width:\"200px\", height:\"200px\"}}\n            alt=\"podcast default\"\n          />\n        </div>\n        <div className=\"w-auto mb-5 flex flex-col items-start\">\n          <span className=\"text-sm text-white text-opacity-50\">\n            {podcast?.category}\n          </span>\n          <span className=\"text-5xl text-white font-bold pt-1 pb-2\">\n            <a onClick={onEditBoxClick} className=\"cursor-pointer\">\n              {podcast?.title}\n            </a>\n          </span>\n          <span className=\"text-sm text-white text-opacity-70\">\n            {podcast?.description}\n          </span>\n        </div>\n      </div>\n      <div>\n        <div className=\"w-full\">\n          <div className=\"flex flex-col\">\n            {podcast?.episodes.length > 0 ? (\n              <section\n                className=\"grid gap-4 grid-cols-4 text-xs h-15 border-b border-solid border-gray-700 border-opacity-50 pb-2\"\n                style={{\n                  gridTemplateColumns:\n                    \"[index] 16px [first] 6fr [var1] 4fr [last] minmax(120px,1fr)\",\n                }}\n              >\n                <span className=\"pl-5\">#</span>\n                <span>제목</span>\n                <span>앨범</span>\n                <span>재생시간</span>\n              </section>\n            ) : (\n              <section className=\"h-15 text-2xl text-white font-medium pl-5 py-2 mt-5\">\n                <span>플레이리스트에 추가할 곡을 찾아보세요</span>\n              </section>\n            )}\n            {podcast?.episodes.map((episode: any, index: number) => (\n              <Episodes data={{ episode, index }} />\n            ))}\n          </div>\n        </div>\n      </div>\n      {editBoxState && (\n        <EditPodcast podcast={podcast} editBoxState={editBoxState} onEditBoxClick={onEditBoxClick} />\n      )}\n    </div>\n  );\n};\n","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/search.tsx",["145","146","147"],"import React, { useState } from \"react\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n  faCaretDown,\n  faUser,\n  faSearch,\n  faCaretUp,\n  faHome,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\n\nexport const Search = (props: any) => {\n  const location = useLocation();\n  const history = useHistory();\n  const back = () => {\n    history.goBack();\n  };\n  const forward = () => {\n    history.goForward();\n  };\n\n  const [menuBox, setMenuBox] = useState(false);\n  const onMenuBox = () => setMenuBox((menuBox) => (menuBox = !menuBox));\n\n  return (\n    <section className=\"w-full flex justify-between py-2\">\n      <div className=\"w-2/5 flex flex-row items-center justify-start\">\n        <div className=\"mr-3 \">\n          <a\n            onClick={back}\n            className=\"w-10 h-10 rounded-full bg-black flex items-center justify-center cursor-pointer\"\n          >\n            <FontAwesomeIcon icon={faChevronLeft} className=\"text-white\" />\n          </a>\n        </div>\n        <div className=\"mr-3 hidden sm:block\">\n          <a\n            onClick={forward}\n            className=\"w-10 h-10 rounded-full bg-black flex items-center justify-center cursor-pointer\"\n          >\n            <FontAwesomeIcon icon={faChevronRight} className=\"text-white\" />\n          </a>\n        </div>\n        {location.pathname === \"/search\" && (\n          <div className=\"w-full flex items-center\">\n            <FontAwesomeIcon\n              icon={faSearch}\n              className=\"text-black fixed ml-3\"\n            />\n            <input\n              type=\"text\"\n              placeholder=\"카테고리명 또는 플레이리스트를 검색하세요\"\n              onChange={props.handleOnchange}\n              className=\"w-full w-auto h-10 rounded-3xl text-sm outline-none text-left text-black overflow-ellipsis pl-10\"\n            />\n          </div>\n        )}\n      </div>\n      <div\n        className=\"w-3/5 flex items-center justify-end\"\n      >\n        <div\n          className=\"h-10 bg-black rounded-3xl flex items-center hover:bg-gray-800 cursor-pointer\"\n          onClick={onMenuBox}\n        >\n          <div className=\"w-7 h-7 rounded-full bg-gray-600 flex items-center justify-center mx-2\">\n            <FontAwesomeIcon icon={faUser} className=\"text-xs text-white\" />\n          </div>\n          <div className=\"mr-2 hidden lg:block text-sm font-bold\">\n            <span>여정식</span>\n          </div>\n          <div className=\"mr-5 hidden lg:block\">\n            {!menuBox ? (\n              <FontAwesomeIcon icon={faCaretDown} className=\"text-white\" />\n            ) : (\n              <FontAwesomeIcon icon={faCaretUp} className=\"text-white\" />\n            )}\n          </div>\n        </div>\n        {menuBox && (\n          <div className=\"w-32 h-24 bg-black rounded-md fixed top-12 mt-2 flex flex-col justify-around\">\n            <div className=\"w-full\">\n              <Link\n                to=\"/my-profile\"\n                className=\"flex items-center hover:text-white mx-2 p-2 rounded-md hover:bg-gray-800 hover:text-white\"\n              >\n                <span className=\"text-sm\">프로필</span>\n              </Link>\n            </div>\n            <div className=\"w-full\">\n              <Link\n                to=\"/logout\"\n                className=\"flex items-center hover:text-white mx-2 p-2 rounded-md hover:bg-gray-800 hover:text-white\"\n              >\n                <span className=\"text-sm\">로그아웃</span>\n              </Link>\n            </div>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/host/podcast.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/host/edit-podcast.tsx",["148","149"],"import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport podcastDefault from \"../../images/podcast_default.svg\";\nimport { Button } from \"../../components/button\";\nimport { useForm } from \"react-hook-form\";\nimport { IUpdatePodcastForm, PODCAST_QUERY } from \"./host-home\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport {\n  updatePodcastMutation,\n  updatePodcastMutationVariables,\n} from \"../../__generated__/updatePodcastMutation\";\nimport {\n  deletePodcastMutation,\n  deletePodcastMutationVariables,\n} from \"../../__generated__/deletePodcastMutation\";\nimport { DocumentNode } from \"graphql\";\n\nconst UPDATE_PODCAST_MUTATION = gql`\n  mutation updatePodcastMutation($updatePodcastInput: UpdatePodcastInput!) {\n    updatePodcast(input: $updatePodcastInput) {\n      error\n      ok\n    }\n  }\n`;\nconst DELETE_PODCAST_MUTATION = gql`\n  mutation deletePodcastMutation($deletePodcastInput: PodcastSearchInput!) {\n    deletePodcast(input: $deletePodcastInput) {\n      error\n      ok\n    }\n  }\n`;\n\nexport const EditPodcast = (props: any) => {\n  const podcast = props.podcast;\n  const history = useHistory();\n  const location = useLocation();\n  const setEditDetail = () => props.onEditBoxClick(props.editBoxState);\n  const onCompleted = (data: updatePodcastMutation) => {\n    const {\n      updatePodcast: { ok },\n    } = data;\n    if (ok) {\n      history.push(location.pathname);\n      setEditDetail();\n    }\n  };\n  const [updatePodcastMutation, { loading }] = useMutation<\n    updatePodcastMutation,\n    updatePodcastMutationVariables\n  >(UPDATE_PODCAST_MUTATION, {\n    onCompleted,\n    refetchQueries: [{ query: PODCAST_QUERY }],\n  });\n  const onSubmit = () => {\n    if (!loading) {\n      let { id, title, category, description } = getValues();\n      id = +id;\n      updatePodcastMutation({\n        variables: {\n          updatePodcastInput: { id, title, category, description },\n        },\n      });\n    }\n  };\n  const onDeletePodcast = () => {\n    if (\n      window.confirm(\n        \"플레이리스트 및 노래가 모두 삭제됩니다.\\n삭제하시겠습니까? \"\n      )\n    ) {\n      onDeleteSubmit();\n    }\n  };\n  const [deletePodcastMutation, { loading: loadingDelete }] = useMutation<\n    deletePodcastMutation,\n    deletePodcastMutationVariables\n  >(DELETE_PODCAST_MUTATION, {\n    refetchQueries: [{ query: PODCAST_QUERY }],\n  });\n  const onDeleteSubmit = () => {\n    if (!loadingDelete) {\n      let { id } = getValues();\n      id = +id;\n      deletePodcastMutation({\n        variables: {\n          deletePodcastInput: { id },\n        },\n      });\n\n      setTimeout(() => {\n        history.push(\"/\");\n      }, 1500);\n    }\n  };\n  const { register, getValues, handleSubmit, formState } = useForm<\n    IUpdatePodcastForm\n  >({\n    mode: \"onChange\",\n    defaultValues: {\n      id: podcast?.id,\n      title: podcast?.title,\n      category: podcast?.category,\n      description: podcast?.description,\n    },\n  });\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"absolute top-0 left-0 right-0 bottom-0 w-full h-screen\">\n        <div className=\"w-full h-screen bg-black bg-opacity-80\"></div>\n\n        <input type=\"hidden\" name=\"id\" ref={register} />\n        <div className=\"absolute top-0 left-0 right-0 bottom-0 flex items-center justify-center\">\n          <div\n            className=\"flex flex-col text-white rounded-xl\"\n            style={{\n              width: \"420px\",\n              height: \"300px\",\n              backgroundColor: \"#282828\",\n            }}\n          >\n            <div className=\"w-full h-1/5 flex justify-between p-5\">\n              <h1 className=\"font-bold text-xl\">Edit details</h1>\n              <a\n                onClick={setEditDetail}\n                className=\"flex items-center justify-center cursor-pointer\"\n              >\n                <FontAwesomeIcon icon={faTimes} />\n              </a>\n            </div>\n            <div className=\"w-full h-3/5 px-5 flex justify-between\">\n              <div className=\"w-1/2 h-full\">\n                <img\n                  src={podcastDefault}\n                  className=\"w-full h-full bg-gray-700\"\n                  alt=\"thumnail\"\n                />\n              </div>\n              <div className=\"w-1/2 h-full pl-5 flex flex-col\">\n                <div className=\"relative h-1/5 mb-2\">\n                  <label\n                    className={`absolute opacity-60`}\n                    style={{\n                      top: \"-8px\",\n                      left: \"5px\",\n                      fontSize: \"8px\",\n                      transition: \"opacity .2s\",\n                    }}\n                  >\n                    <span>Title</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"title\"\n                    required\n                    ref={register({ required: true })}\n                    className=\"w-full outline-none rounded-md text-xs px-3\"\n                    style={{\n                      height: \"30px\",\n                      background: \"hsla(0,0%,100%,.1)\",\n                      backgroundColor:\n                        \"internal-light-dark(rgb(255, 255, 255), rgb(59, 59, 59)\",\n                    }}\n                  />\n                </div>\n                <div className=\"relative h-1/5 mb-2\">\n                  <label\n                    className={`absolute opacity-60`}\n                    style={{\n                      top: \"-8px\",\n                      left: \"5px\",\n                      fontSize: \"8px\",\n                      transition: \"opacity .2s\",\n                    }}\n                  >\n                    <span>Category</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"category\"\n                    required\n                    ref={register({ required: true })}\n                    className=\"w-full outline-none rounded-md text-xs px-3\"\n                    style={{\n                      height: \"30px\",\n                      background: \"hsla(0,0%,100%,.1)\",\n                      backgroundColor:\n                        \"internal-light-dark(rgb(255, 255, 255), rgb(59, 59, 59)\",\n                    }}\n                  />\n                </div>\n                <div className=\"relative h-3/5\">\n                  <label\n                    className={`absolute opacity-60`}\n                    style={{\n                      top: \"-8px\",\n                      left: \"5px\",\n                      fontSize: \"8px\",\n                      transition: \"opacity .2s\",\n                    }}\n                  >\n                    <span>Description</span>\n                  </label>\n                  <textarea\n                    className=\"resize-none w-full h-full outline-none rounded-md text-xs p-3\"\n                    name=\"description\"\n                    ref={register}\n                    style={{\n                      background: \"hsla(0,0%,100%,.1)\",\n                      backgroundColor:\n                        \"internal-light-dark(rgb(255, 255, 255), rgb(59, 59, 59)\",\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"w-full h-1/5 px-5 flex justify-between\">\n              <div className=\"w-1/2 flex items-center justify-end\">\n                <button\n                  onClick={onDeletePodcast}\n                  className={\n                    \"w-full text-sm font-sm focus:outline-none text-white py-3 rounded-3xl transition-colors \" +\n                    \"bg-red-500 hover:bg-red-400 bg-red-600 bg-opacity-80 hover:bg-red-400\"\n                  }\n                >\n                  {loading ? \"Loading...\" : \"삭제하기\"}\n                </button>\n              </div>\n              <div className=\"w-1/2 pl-5 flex items-center justify-end\">\n                <Button\n                  canClick={formState.isValid}\n                  loading={loading}\n                  actionText={\"저장하기\"}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n","/Users/yjs/Documents/GitHub/hi-nest-front/src/__generated__/globalTypes.ts",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/listener/my-subscriptions.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/listener/detail-subscription.tsx",["150"],"import React from \"react\";\nimport podcastDefault from \"../../images/podcast_default.svg\";\nimport { useState } from \"react\";\nimport { Episodes } from \"../../components/episodes\";\n\ninterface IPodcast {\n  id: number;\n  title: string;\n  category: string;\n  description: string;\n  episodes: any;\n}\n\nexport const DetailSubscription = (props: any) => {\n  const podcast: IPodcast = props.data.podcasts?.subscriptions.find(\n    (podcast: IPodcast) => podcast.id === +props.data.paramId\n  );\n\n  return (\n    <div className=\"w-full py-5 px-10 text-gray-500\" style={{minWidth: \"500px\"}}>\n      <div className=\"w-full h-52 flex items-end\">\n        <div className=\"mb-5 mr-5 flex items-end shadow-2xl\">\n          <img\n            src={podcastDefault}\n            className=\"bg-gray-700\"\n            style={{width:\"200px\", height:\"200px\"}}\n            alt=\"podcast default\"\n          />\n        </div>\n        <div className=\"w-auto mb-5 flex flex-col items-start\">\n          <span className=\"text-sm text-white text-opacity-50\">\n            {podcast?.category}\n          </span>\n          <span className=\"text-5xl text-white font-bold pt-1 pb-2\">\n            {podcast?.title}\n          </span>\n          <span className=\"text-sm text-white text-opacity-70\">\n            {podcast?.description}\n          </span>\n        </div>\n      </div>\n      <div>\n        <div className=\"w-full\">\n          <div className=\"flex flex-col\">\n            {podcast?.episodes.length > 0 ? (\n              <section\n                className=\"grid gap-4 grid-cols-4 text-xs h-15 border-b border-solid border-gray-700 border-opacity-50 pb-2\"\n                style={{\n                  gridTemplateColumns:\n                    \"[index] 16px [first] 6fr [var1] 4fr [last] minmax(120px,1fr)\",\n                }}\n              >\n                <span className=\"pl-5\">#</span>\n                <span>제목</span>\n                <span>앨범</span>\n                <span>재생시간</span>\n              </section>\n            ) : (\n              <section className=\"h-15 text-2xl text-white font-medium pl-5 py-2 mt-5\">\n                <span>플레이리스트에 추가할 곡을 찾아보세요</span>\n              </section>\n            )}\n            {podcast?.episodes.map((episode: any, index: number) => (\n              <Episodes data={{ episode, index }} />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/Users/yjs/Documents/GitHub/hi-nest-front/src/components/episodes.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/my-profile.tsx",["151","152","153","154"],"import React from \"react\";\nimport podcastDefault from \"../../images/podcast_default.svg\";\nimport { useState } from \"react\";\nimport { Episodes } from \"../../components/episodes\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface IPodcast {\n  id: number;\n  title: string;\n  category: string;\n  description: string;\n  episodes: any;\n}\n\nexport const MyProfile = (props: any) => {\n  return (\n    <div\n      className=\"w-full py-5 px-10 text-gray-500\"\n      style={{ minWidth: \"500px\" }}\n    >\n      <div className=\"w-full h-52 flex items-end\">\n        <div\n          className=\"mb-5 mr-5 flex items-center justify-center bg-black bg-opacity-40 rounded-full items-end shadow-2xl\"\n          style={{ width: \"200px\", height: \"200px\" }}\n        >\n          <FontAwesomeIcon\n            icon={faUser}\n            style={{ width: \"50px\", height: \"50px\" }}\n          />\n        </div>\n        <div className=\"w-auto mb-5 flex flex-col items-start\">\n          <span className=\"text-sm text-white text-opacity-50\">\n            프로\n          </span>\n          <span className=\"text-5xl text-white font-bold pt-1 pb-2\">\n            여정식\n          </span>\n          <span className=\"text-sm text-white text-opacity-70\">\n            구독 수\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n",{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":16,"column":6,"nodeType":"161","endLine":16,"endColumn":8,"suggestions":"162"},{"ruleId":"163","severity":1,"message":"164","line":16,"column":10,"nodeType":"165","messageId":"166","endLine":16,"endColumn":25},{"ruleId":"167","severity":1,"message":"168","line":136,"column":15,"nodeType":"169","endLine":139,"endColumn":16},{"ruleId":"170","severity":1,"message":"171","line":17,"column":22,"nodeType":"172","messageId":"173","endLine":17,"endColumn":24},{"ruleId":"170","severity":1,"message":"171","line":20,"column":22,"nodeType":"172","messageId":"173","endLine":20,"endColumn":24},{"ruleId":"167","severity":1,"message":"168","line":68,"column":13,"nodeType":"169","endLine":68,"endColumn":67},{"ruleId":"167","severity":1,"message":"168","line":124,"column":19,"nodeType":"169","endLine":128,"endColumn":20},{"ruleId":"167","severity":1,"message":"168","line":30,"column":15,"nodeType":"169","endLine":30,"endColumn":66},{"ruleId":"167","severity":1,"message":"168","line":35,"column":15,"nodeType":"169","endLine":35,"endColumn":67},{"ruleId":"167","severity":1,"message":"168","line":40,"column":13,"nodeType":"169","endLine":40,"endColumn":68},{"ruleId":"163","severity":1,"message":"174","line":9,"column":3,"nodeType":"165","messageId":"166","endLine":9,"endColumn":9},{"ruleId":"167","severity":1,"message":"168","line":31,"column":11,"nodeType":"169","endLine":34,"endColumn":12},{"ruleId":"167","severity":1,"message":"168","line":39,"column":11,"nodeType":"169","endLine":42,"endColumn":12},{"ruleId":"163","severity":1,"message":"175","line":18,"column":10,"nodeType":"165","messageId":"166","endLine":18,"endColumn":22},{"ruleId":"167","severity":1,"message":"168","line":127,"column":15,"nodeType":"169","endLine":130,"endColumn":16},{"ruleId":"163","severity":1,"message":"176","line":3,"column":10,"nodeType":"165","messageId":"166","endLine":3,"endColumn":18},{"ruleId":"163","severity":1,"message":"177","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":22},{"ruleId":"163","severity":1,"message":"176","line":3,"column":10,"nodeType":"165","messageId":"166","endLine":3,"endColumn":18},{"ruleId":"163","severity":1,"message":"178","line":4,"column":10,"nodeType":"165","messageId":"166","endLine":4,"endColumn":18},{"ruleId":"163","severity":1,"message":"179","line":8,"column":11,"nodeType":"165","messageId":"166","endLine":8,"endColumn":19},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'client.cache' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["182"],"@typescript-eslint/no-unused-vars","'MySubscriptions' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'faHome' is defined but never used.","'DocumentNode' is defined but never used.","'useState' is defined but never used.","'podcastDefault' is defined but never used.","'Episodes' is defined but never used.","'IPodcast' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"183","fix":"184"},"Update the dependencies array to be: [client.cache, history]",{"range":"185","text":"186"},[409,411],"[client.cache, history]"]