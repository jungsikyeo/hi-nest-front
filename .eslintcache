[{"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\index.tsx":"1","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\reportWebVitals.ts":"2","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\apollo.ts":"3","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\App.tsx":"4","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\constants.ts":"5","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\routers\\logged-in-router.tsx":"6","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\routers\\logged-out-router.tsx":"7","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\__generated__\\globalTypes.ts":"8","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\hooks\\useMe.tsx":"9","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\components\\button.tsx":"10","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\components\\form-error.tsx":"11","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\listener\\listener-home.tsx":"12","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\host\\host-home.tsx":"13","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\common\\404.tsx":"14","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\common\\create-account.tsx":"15","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\common\\home.tsx":"16","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\common\\logout.tsx":"17","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\common\\login.tsx":"18","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\fragments.ts":"19","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\common\\footer.tsx":"20","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\common\\header.tsx":"21","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\common\\my-profile.tsx":"22","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\listener\\detail-subscription.tsx":"23","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\host\\detail-podcast.tsx":"24","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\listener\\search-podcasts.tsx":"25","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\common\\search.tsx":"26","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\host\\my-podcasts.tsx":"27","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\listener\\my-subscriptions.tsx":"28","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\host\\edit-podcast.tsx":"29","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\components\\search-api-episodes.tsx":"30","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\components\\thumbnail.tsx":"31","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\host\\podcast.tsx":"32","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\components\\episodes.tsx":"33"},{"size":748,"mtime":1612758172431,"results":"34","hashOfConfig":"35"},{"size":440,"mtime":1612758172446,"results":"36","hashOfConfig":"35"},{"size":2018,"mtime":1613442946047,"results":"37","hashOfConfig":"35"},{"size":375,"mtime":1612758172394,"results":"38","hashOfConfig":"35"},{"size":34,"mtime":1612758172411,"results":"39","hashOfConfig":"35"},{"size":2236,"mtime":1613442946214,"results":"40","hashOfConfig":"35"},{"size":879,"mtime":1613072546830,"results":"41","hashOfConfig":"35"},{"size":1270,"mtime":1613442946042,"results":"42","hashOfConfig":"35"},{"size":282,"mtime":1612758172413,"results":"43","hashOfConfig":"35"},{"size":719,"mtime":1613442946050,"results":"44","hashOfConfig":"35"},{"size":238,"mtime":1612758172408,"results":"45","hashOfConfig":"35"},{"size":5181,"mtime":1613442946199,"results":"46","hashOfConfig":"35"},{"size":7492,"mtime":1613443027877,"results":"47","hashOfConfig":"35"},{"size":1726,"mtime":1613442946104,"results":"48","hashOfConfig":"35"},{"size":5519,"mtime":1613072546820,"results":"49","hashOfConfig":"35"},{"size":3480,"mtime":1613465441979,"results":"50","hashOfConfig":"35"},{"size":608,"mtime":1613072546824,"results":"51","hashOfConfig":"35"},{"size":5021,"mtime":1613072546823,"results":"52","hashOfConfig":"35"},{"size":270,"mtime":1613442946078,"results":"53","hashOfConfig":"35"},{"size":4148,"mtime":1613463580309,"results":"54","hashOfConfig":"35"},{"size":5454,"mtime":1613459680700,"results":"55","hashOfConfig":"35"},{"size":1950,"mtime":1613442946129,"results":"56","hashOfConfig":"35"},{"size":7853,"mtime":1613442946195,"results":"57","hashOfConfig":"35"},{"size":4203,"mtime":1613442946134,"results":"58","hashOfConfig":"35"},{"size":1170,"mtime":1613442946204,"results":"59","hashOfConfig":"35"},{"size":3876,"mtime":1613442946132,"results":"60","hashOfConfig":"35"},{"size":1113,"mtime":1613442946169,"results":"61","hashOfConfig":"35"},{"size":1125,"mtime":1613442946202,"results":"62","hashOfConfig":"35"},{"size":8521,"mtime":1613442946142,"results":"63","hashOfConfig":"35"},{"size":4476,"mtime":1613442946060,"results":"64","hashOfConfig":"35"},{"size":2099,"mtime":1613442946068,"results":"65","hashOfConfig":"35"},{"size":980,"mtime":1613442946181,"results":"66","hashOfConfig":"35"},{"size":1588,"mtime":1613442946058,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1xmlslo",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"70"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"70"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\index.tsx",[],["145","146"],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\reportWebVitals.ts",[],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\apollo.ts",["147"],"import {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  makeVar,\r\n  createHttpLink,\r\n  split,\r\n} from \"@apollo/client\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\nimport { LS_TOKEN } from \"./constants\";\r\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\r\nimport { getMainDefinition } from \"@apollo/client/utilities\";\r\n\r\nconst token = localStorage.getItem(LS_TOKEN);\r\nexport const isLoggedInVar = makeVar(Boolean(token));\r\nexport const authTokenVar = makeVar(token);\r\n\r\nconst wsLink = new WebSocketLink({\r\n  uri:\r\n      process.env.NODE_ENV === \"production\"\r\n          ? \"wss://nuber-eats-yjs-backend.herokuapp.com/graphql\"\r\n          : `ws://localhost:4000/graphql`,\r\n  options: {\r\n    reconnect: true,\r\n    connectionParams: {\r\n      \"x-jwt\": authTokenVar() || \"\",\r\n    },\r\n  },\r\n});\r\n\r\nconst httpLink = createHttpLink({\r\n  uri:\r\n      process.env.NODE_ENV === \"production\"\r\n          ? \"https://nuber-eats-yjs-backend.herokuapp.com/graphql\"\r\n          : \"http://localhost:4000/graphql\",\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      \"x-jwt\": authTokenVar() || \"\",\r\n    },\r\n  };\r\n});\r\n\r\nconst splitLink = split(\r\n    ({ query }) => {\r\n      const definition = getMainDefinition(query);\r\n      return (\r\n          definition.kind === \"OperationDefinition\" &&\r\n          definition.operation === \"subscription\"\r\n      );\r\n    },\r\n    wsLink,\r\n    authLink.concat(httpLink)\r\n);\r\n\r\nexport const makeLogout = () => {\r\n  localStorage.removeItem(LS_TOKEN);\r\n  isLoggedInVar(false);\r\n  authTokenVar(null);\r\n};\r\n\r\nexport const client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache({\r\n    typePolicies: {\r\n      Query: {\r\n        fields: {\r\n          isLoggedIn: {\r\n            read() {\r\n              return isLoggedInVar();\r\n            },\r\n          },\r\n          token: {\r\n            read() {\r\n              return authTokenVar();\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  }),\r\n});\r\n","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\App.tsx",[],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\constants.ts",[],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\routers\\logged-in-router.tsx",[],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\routers\\logged-out-router.tsx",[],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\__generated__\\globalTypes.ts",[],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\hooks\\useMe.tsx",[],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\components\\button.tsx",[],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\components\\form-error.tsx",[],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\listener\\listener-home.tsx",[],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\host\\host-home.tsx",["148","149"],"import React, { useState } from \"react\";\nimport { faHome, faSearch, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Helmet } from \"react-helmet-async\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport spotifyLogoWhite from \"../../images/spotify_logo_white.svg\";\nimport { Search } from \"../common/search\";\nimport { MyPodcasts } from \"./my-podcasts\";\nimport { gql, useMutation, useQuery } from \"@apollo/client\";\nimport { PODCAST_FRAGMENT } from \"../../fragments\";\nimport { DetailPodcast } from \"./detail-podcast\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport {\n  createPodcastMutation,\n  createPodcastMutationVariables,\n} from \"../../__generated__/createPodcastMutation\";\nimport { MyProfile } from \"../common/my-profile\";\nimport { notifyInfo, notifySuccess } from \"../listener/detail-subscription\";\n\nexport interface IUpdatePodcastForm {\n  id: number;\n  title: string;\n  category: string;\n  description?: string;\n}\n\nexport const PODCAST_QUERY = gql`\n  query PodcastQuery {\n    myPodcasts {\n      ok\n      error\n      podcasts {\n        ...PodcastParts\n      }\n    }\n  }\n  ${PODCAST_FRAGMENT}\n`;\nconst CREATE_PODCAST_MUTATION = gql`\n  mutation createPodcastMutation($createPodcastInput: CreatePodcastInput!) {\n    createPodcast(input: $createPodcastInput) {\n      error\n      ok\n      id\n    }\n  }\n`;\n\nexport const HostHome = () => {\n  let { data: podcasts } = useQuery(PODCAST_QUERY);\n  const location = useLocation();\n  const [, path, paramId] = location.pathname.split(\"/\");\n  const [searchText, setSearchText] = useState(\"\");\n\n  const history = useHistory();\n  const onCompleted = (data: createPodcastMutation) => {\n    const {\n      createPodcast: { ok, id },\n    } = data;\n    if (ok) {\n      notifySuccess(\n        <div className={`text-sm`}>플레이리스트가 생성되었습니다.</div>\n      );\n      setTimeout(() => {\n        history.push(`/podcasts/${id}`);\n      }, 1500);\n    }\n  };\n  const [createPodcastMutation, { loading }] = useMutation<\n    createPodcastMutation,\n    createPodcastMutationVariables\n  >(CREATE_PODCAST_MUTATION, {\n    onCompleted,\n    refetchQueries: [{ query: PODCAST_QUERY }],\n  });\n\n  const onCreatePodcast = () => {\n    if (!loading) {\n      const index = podcasts?.myPodcasts?.podcasts?.length + 1;\n      const title = `내 플레이리스트 #${index}`;\n      const category = `미분류`;\n      const description = null;\n\n      notifyInfo(<div className={`text-sm`}>플레이리스트를 추가합니다.</div>);\n\n      createPodcastMutation({\n        variables: {\n          createPodcastInput: { title, category, description },\n        },\n      });\n    }\n  };\n\n  return (\n    <div className=\"bg-gradient-to-b from-gray-800 to-black text-gray-500\">\n      <Helmet>\n        <title>Host | Podcast</title>\n      </Helmet>\n      <div className=\"flex flex-col min-h-screen\">\n        <div className=\"flex\" style={{ minHeight: \"calc(100vh - 80px)\" }}>\n          <div\n            id=\"left\"\n            className=\"bg-black text-gray-500\"\n            style={{ width: \"230px\", minHeight: \"calc(100vh - 80px)\" }}\n          >\n            <div style={{ height: \"260px\" }}>\n              <div className=\"pl-5 py-5\">\n                <Link to=\"/\">\n                  <img src={spotifyLogoWhite} className=\"w-32\" alt=\"Spotify\" />\n                </Link>\n              </div>\n              <div className=\"w-full\">\n                <Link\n                  to=\"/\"\n                  className={`flex items-center hover:text-white mx-2 py-1 rounded-md ${\n                    location.pathname === \"/\" && \"bg-gray-800 text-white\"\n                  }`}\n                >\n                  <span className=\"text-2xl px-3\">\n                    <FontAwesomeIcon icon={faHome} />\n                  </span>\n                  <span className=\"text-sm\">홈</span>\n                </Link>\n              </div>\n              <div className=\"w-full\">\n                <Link\n                  to=\"/search\"\n                  className={`flex items-center hover:text-white mx-2 py-1 rounded-md ${\n                    location.pathname === \"/search\" && \"bg-gray-800 text-white\"\n                  }`}\n                >\n                  <span className=\"text-2xl px-3\">\n                    <FontAwesomeIcon icon={faSearch} />\n                  </span>\n                  <span className=\"text-sm\">검색하기</span>\n                </Link>\n              </div>\n              <div className=\"mx-5 py-3\">\n                <span className=\"font-bold text-xs text-white text-opacity-50 tracking-wider\">\n                  플레이리스트\n                </span>\n              </div>\n              <a\n                onClick={onCreatePodcast}\n                className=\"flex items-center hover:text-white cursor-pointer mx-5 pb-3 mb-3 border-b border-solid border-gray-500 border-opacity-40\"\n              >\n                <span className=\"mr-3 bg-gray-100 bg-opacity-30 w-7 h-7 rounded-sm flex items-center justify-center\">\n                  <FontAwesomeIcon icon={faPlus} className=\"text-black\" />\n                </span>\n                <span className=\"text-sm\">플레이리스트 만들기</span>\n                <ToastContainer\n                  position=\"bottom-center\"\n                  autoClose={3000}\n                  hideProgressBar\n                  newestOnTop={false}\n                  closeOnClick\n                  rtl={false}\n                  pauseOnFocusLoss\n                  draggable\n                  pauseOnHover\n                />\n              </a>\n            </div>\n            <div\n              className=\"overflow-y-auto\"\n              style={{ maxHeight: \"calc(100vh - 340px)\" }}\n            >\n              <ul className=\"text-sm px-5\">\n                {podcasts?.myPodcasts.podcasts?.map(\n                  (podcast: any, index: number) => (\n                    <li\n                      key={index}\n                      className=\"hover:text-white tracking-wider pb-3 overflow-x-hidden overflow-ellipsis whitespace-nowrap\"\n                    >\n                      <Link to={`/podcasts/${podcast.id}`} key={podcast.id}>\n                        {podcast.title}\n                      </Link>\n                    </li>\n                  )\n                )}\n              </ul>\n            </div>\n          </div>\n          <div style={{ width: \"calc(100vw - 230px)\" }}>\n            <div\n              className=\"w-full flex text-white px-10 bg-gray-900 bg-opacity-95\"\n              style={{ height: \"60px\" }}\n            >\n              <Search handleOnchange={setSearchText} />\n            </div>\n            <div\n              className=\"w-full overflow-y-scroll bg-black bg-opacity-10\"\n              style={{ height: \"200px\", minHeight: \"calc(100vh - 140px)\" }}\n            >\n              {path === \"my-profile\" && <MyProfile />}\n              {path === \"podcasts\" && (\n                <DetailPodcast data={{ podcasts, paramId }} />\n              )}\n              {path !== \"my-profile\" && path !== \"podcasts\" && (\n                <MyPodcasts data={podcasts} text={searchText} />\n              )}\n            </div>\n          </div>\n        </div>\n        <footer\n          className=\"bg-black text-white flex items-center justify-center\"\n          style={{ height: \"80px\" }}\n        >\n          <span>player comming soon....</span>\n        </footer>\n      </div>\n    </div>\n  );\n};\n","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\common\\404.tsx",[],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\common\\create-account.tsx",[],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\common\\home.tsx",["150","151"],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\common\\logout.tsx",["152"],"import { useApolloClient } from \"@apollo/client\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeLogout } from \"../../apollo\";\r\n\r\nexport const Logout = () => {\r\n  const history = useHistory();\r\n  const client = useApolloClient();\r\n\r\n  useEffect(() => {\r\n    client.cache.reset().then(async () => {\r\n      await makeLogout();\r\n    });\r\n\r\n    history.push(\"/\");\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"h-screen flex justify-center items-center\">\r\n      <span className=\"font-medium text-xl tracking-wide\">Loading...</span>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\common\\login.tsx",[],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\fragments.ts",[],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\common\\footer.tsx",["153","154"],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\common\\header.tsx",["155","156"],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\common\\my-profile.tsx",[],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\listener\\detail-subscription.tsx",["157","158"],"import React from \"react\";\r\nimport podcastDefault from \"../../images/podcast_default.svg\";\r\nimport { Episodes } from \"../../components/episodes\";\r\nimport playIcon from \"../../images/play.svg\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport { GET_ALL_PODCASTS_QUERY } from \"./listener-home\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {\r\n  ChangeSubscribeMutation,\r\n  ChangeSubscribeMutationVariables,\r\n} from \"../../__generated__/ChangeSubscribeMutation\";\r\nimport { IEpisode } from \"../../components/search-api-episodes\";\r\nimport { Thumbnail } from \"../../components/thumbnail\";\r\n\r\nexport interface IPodcast {\r\n  id: number;\r\n  title: string;\r\n  category: string;\r\n  description: string;\r\n  episodes: any;\r\n}\r\n\r\nconst CHANGE_SUBSCRIBE_MUTATION = gql`\r\n  mutation ChangeSubscribeMutation($input: ChangeSubscribeInput!) {\r\n    changeSubscribe(input: $input) {\r\n      error\r\n      ok\r\n    }\r\n  }\r\n`;\r\n\r\nexport const notifyInfo = (notifyMessage: any) => {\r\n  toast.info(notifyMessage, {\r\n    position: \"bottom-center\",\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n  });\r\n};\r\n\r\nexport const notifySuccess = (notifyMessage: any) => {\r\n  toast.success(notifyMessage, {\r\n    position: \"bottom-center\",\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n  });\r\n};\r\nexport const notifyError = (notifyMessage: any) => {\r\n  toast.error(notifyMessage, {\r\n    position: \"bottom-center\",\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n  });\r\n};\r\n\r\nexport const DetailSubscription = (props: any) => {\r\n  const podcast: IPodcast = props.data.podcasts?.getAllPodcasts.podcasts.find(\r\n    (podcast: IPodcast) => podcast.id === +props.data.paramId\r\n  );\r\n  const subscription: IPodcast = props.data.podcasts?.subscriptions.find(\r\n    (podcast: IPodcast) => podcast.id === +props.data.paramId\r\n  );\r\n\r\n  const onCompleted = (data: ChangeSubscribeMutation) => {\r\n    const {\r\n      changeSubscribe: { ok },\r\n    } = data;\r\n    if (ok) {\r\n      let notifyMessage = (\r\n        <div className={`text-sm`}>\r\n          {subscription ? \"구독을 취소하였습니다.\" : \"구독중입니다.\"}\r\n        </div>\r\n      );\r\n      notifySuccess(notifyMessage);\r\n    }\r\n  };\r\n  const [changeSubscribeMutation, { loading }] = useMutation<\r\n    ChangeSubscribeMutation,\r\n    ChangeSubscribeMutationVariables\r\n  >(CHANGE_SUBSCRIBE_MUTATION, {\r\n    onCompleted,\r\n    refetchQueries: [{ query: GET_ALL_PODCASTS_QUERY }],\r\n  });\r\n  const onChangeSubscription = () => {\r\n    if (!loading) {\r\n      let notifyMessage = (\r\n        <div className={`text-sm`}>\r\n          {subscription ? \"구독을 취소중입니다.\" : \"구독 신청중입니다.\"}\r\n        </div>\r\n      );\r\n      subscription ? notifyError(notifyMessage) : notifyInfo(notifyMessage);\r\n      const podcastId: number = podcast.id;\r\n      changeSubscribeMutation({\r\n        variables: {\r\n          input: { podcastId },\r\n        },\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <div\r\n      className=\"w-full py-5 px-10 text-gray-500\"\r\n      style={{ minWidth: \"500px\" }}\r\n    >\r\n      <div className=\"w-full h-52 flex items-end\">\r\n        <Thumbnail data={podcast} />\r\n        <div className=\"w-auto mb-5 flex flex-col items-start\">\r\n          <span className=\"text-sm text-white text-opacity-50\">\r\n            {podcast?.category}\r\n          </span>\r\n          <span className=\"text-5xl text-white font-bold pt-1 pb-2\">\r\n            {podcast?.title}\r\n          </span>\r\n          <span className=\"text-sm text-white text-opacity-70\">\r\n            {podcast?.description}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className=\"w-full\">\r\n          <div className=\"flex flex-col\">\r\n            <section className=\"h-15 text-2xl text-white font-medium py-7\">\r\n              <div className=\"flex\">\r\n                <div\r\n                  className=\"flex items-center justify-center w-14 h-14 rounded-full\"\r\n                  style={{ backgroundColor: \"#1db954\" }}\r\n                >\r\n                  <img src={playIcon} alt=\"play\" />\r\n                </div>\r\n                {subscription ? (\r\n                  <div\r\n                    className=\"flex items-center justify-center w-14 h-14 ml-5\"\r\n                    style={{ color: \"#1db954\" }}\r\n                  >\r\n                    <button\r\n                      onClick={onChangeSubscription}\r\n                      className=\"outline-none focus:outline-none\"\r\n                    >\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        height=\"32\"\r\n                        width=\"32\"\r\n                        viewBox=\"0 0 32 32\"\r\n                        fill=\"currentColor\"\r\n                      >\r\n                        <path d=\"M27.319 5.927a7.445 7.445 0 00-10.02-.462s-.545.469-1.299.469c-.775 0-1.299-.469-1.299-.469a7.445 7.445 0 00-10.02 10.993l9.266 10.848a2.7 2.7 0 004.106 0l9.266-10.848a7.447 7.447 0 000-10.531z\"></path>\r\n                      </svg>\r\n                    </button>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"flex items-center justify-center w-14 h-14 ml-5 text-white text-opacity-50 hover:text-opacity-100\">\r\n                    <button\r\n                      onClick={onChangeSubscription}\r\n                      className=\"outline-none focus:outline-none\"\r\n                    >\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        height=\"32\"\r\n                        width=\"32\"\r\n                        viewBox=\"0 0 32 32\"\r\n                        fill=\"currentColor\"\r\n                      >\r\n                        <path d=\"M27.672 5.573a7.904 7.904 0 00-10.697-.489c-.004.003-.425.35-.975.35-.564 0-.965-.341-.979-.354a7.904 7.904 0 00-10.693.493A7.896 7.896 0 002 11.192c0 2.123.827 4.118 2.301 5.59l9.266 10.848a3.196 3.196 0 004.866 0l9.239-10.819A7.892 7.892 0 0030 11.192a7.896 7.896 0 00-2.328-5.619zm-.734 10.56l-9.266 10.848c-.837.979-2.508.979-3.346 0L5.035 16.104A6.9 6.9 0 013 11.192 6.9 6.9 0 015.035 6.28a6.935 6.935 0 014.913-2.048 6.89 6.89 0 014.419 1.605A2.58 2.58 0 0016 6.434c.914 0 1.555-.53 1.619-.585a6.908 6.908 0 019.346.431C28.277 7.593 29 9.337 29 11.192s-.723 3.6-2.062 4.941z\"></path>\r\n                      </svg>\r\n                    </button>\r\n                  </div>\r\n                )}\r\n\r\n                <ToastContainer\r\n                  position=\"bottom-center\"\r\n                  autoClose={3000}\r\n                  hideProgressBar\r\n                  newestOnTop={false}\r\n                  closeOnClick\r\n                  rtl={false}\r\n                  pauseOnFocusLoss\r\n                  draggable\r\n                  pauseOnHover\r\n                />\r\n              </div>\r\n            </section>\r\n            <section\r\n              className=\"grid gap-4 grid-cols-4 text-xs h-15 border-b border-solid border-gray-700 border-opacity-50 pb-2\"\r\n              style={{\r\n                gridTemplateColumns:\r\n                  \"[index] 16px [first] 6fr [var1] 4fr [last] minmax(120px,1fr)\",\r\n              }}\r\n            >\r\n              <span className=\"pl-5\">#</span>\r\n              <span>제목</span>\r\n              <span>앨범</span>\r\n              <span>재생시간</span>\r\n            </section>\r\n            {podcast?.episodes.map((episode: any, index: number) => (\r\n              <Episodes data={{ episode, index }} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\host\\detail-podcast.tsx",["159"],"import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Episodes } from \"../../components/episodes\";\r\nimport { EditPodcast } from \"./edit-podcast\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport axios from \"axios\";\r\nimport {\r\n  SearchApiEpisodes,\r\n} from \"../../components/search-api-episodes\";\r\nimport { Thumbnail } from \"../../components/thumbnail\";\r\n\r\ninterface IPodcast {\r\n  id: number;\r\n  title: string;\r\n  category: string;\r\n  description: string;\r\n  episodes: any;\r\n}\r\n\r\nexport const DetailPodcast = (props: any) => {\r\n  const [searchItems, setSearchItems] = useState([]);\r\n  const podcast: IPodcast = props.data.podcasts?.myPodcasts.podcasts.find(\r\n    (podcast: IPodcast) => podcast.id === +props.data.paramId\r\n  );\r\n\r\n  const [editBoxState, setEditBoxState] = useState(false);\r\n  const onEditBoxClick = () =>\r\n    setEditBoxState((editBoxState) => (editBoxState = !editBoxState));\r\n\r\n  const onChangeSearchApiText = (e: any) => {\r\n    axios\r\n      .get(\r\n        `https://nuber-eats-yjs-backend.herokuapp.com/spotify/api/auth?searchText=${e.target.value}`\r\n        //\"http://localhost:4000/spotify/api/auth?searchText=%EC%86%8C%EB%85%80%EC%8B%9C%EB%8C%80\"\r\n      )\r\n      .then(({ data }) => {\r\n        setSearchItems(data.episodes);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full py-5 px-10\" style={{ minWidth: \"500px\" }}>\r\n      <div className=\"w-full h-52 flex items-end\">\r\n        <Thumbnail data={podcast} />\r\n        <div className=\"w-auto mb-5 flex flex-col items-start\">\r\n          <span className=\"text-sm text-white text-opacity-50\">\r\n            {podcast?.category}\r\n          </span>\r\n          <span className=\"text-5xl text-white font-bold pt-1 pb-2\">\r\n            <a onClick={onEditBoxClick} className=\"cursor-pointer\">\r\n              {podcast?.title}\r\n            </a>\r\n          </span>\r\n          <span className=\"text-sm text-white text-opacity-70\">\r\n            {podcast?.description}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className=\"w-full\">\r\n          <div className=\"flex flex-col\">\r\n            <section\r\n              className=\"grid gap-4 grid-cols-4 text-xs h-15 border-b border-solid border-gray-700 border-opacity-50 pt-5 pb-2\"\r\n              style={{\r\n                gridTemplateColumns:\r\n                  \"[index] 16px [first] 6fr [var1] 4fr [last] minmax(120px,1fr)\",\r\n              }}\r\n            >\r\n              <span className=\"pl-5\">#</span>\r\n              <span>제목</span>\r\n              <span>앨범</span>\r\n              <span>재생시간</span>\r\n            </section>\r\n            {podcast?.episodes.map((episode: any, index: number) => (\r\n              <Episodes data={{ episode, index }} />\r\n            ))}\r\n            <div className=\"pb-5 border-t border-solid border-gray-700 border-opacity-50\">\r\n              {\" \"}\r\n            </div>\r\n            <section className=\"w-full h-15 text-2xl text-white font-medium pl-5 py-2 mt-5\">\r\n              <div>\r\n                <span>플레이리스트에 추가할 곡을 찾아보세요</span>\r\n              </div>\r\n              <div className=\"w-full pt-5 flex items-center relative\">\r\n                <FontAwesomeIcon\r\n                  icon={faSearch}\r\n                  className=\"text-black absolute ml-3\"\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"곡 또는 아티스트를 입력해주세요.\"\r\n                  onChange={onChangeSearchApiText}\r\n                  className=\"w-auto h-10  rounded-md text-sm outline-none text-left text-black overflow-ellipsis pl-10\"\r\n                  style={{ width: \"300px\" }}\r\n                />\r\n              </div>\r\n            </section>\r\n            {searchItems?.map((episode, index) => (\r\n              <SearchApiEpisodes data={{ episode, index }} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {editBoxState && (\r\n        <EditPodcast\r\n          podcast={podcast}\r\n          editBoxState={editBoxState}\r\n          onEditBoxClick={onEditBoxClick}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\listener\\search-podcasts.tsx",[],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\common\\search.tsx",["160","161","162"],"import React, { useState } from \"react\";\r\nimport {\r\n  faChevronLeft,\r\n  faChevronRight,\r\n  faCaretDown,\r\n  faUser,\r\n  faSearch,\r\n  faCaretUp,\r\n  faHome,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { ME_QUERY } from \"./my-profile\";\r\n\r\nexport const Search = (props: any) => {\r\n  const { data: me } = useQuery(ME_QUERY);\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const back = () => {\r\n    history.goBack();\r\n  };\r\n  const forward = () => {\r\n    history.goForward();\r\n  };\r\n\r\n  const [menuBox, setMenuBox] = useState(false);\r\n  const onMenuBox = () => setMenuBox((menuBox) => (menuBox = !menuBox));\r\n\r\n  return (\r\n    <section className=\"w-full flex justify-between py-2\">\r\n      <div className=\"w-2/5 flex flex-row items-center justify-start\">\r\n        <div className=\"mr-3 \">\r\n          <a\r\n            onClick={back}\r\n            className=\"w-10 h-10 rounded-full bg-black flex items-center justify-center cursor-pointer\"\r\n          >\r\n            <FontAwesomeIcon icon={faChevronLeft} className=\"text-white\" />\r\n          </a>\r\n        </div>\r\n        <div className=\"mr-3 hidden sm:block\">\r\n          <a\r\n            onClick={forward}\r\n            className=\"w-10 h-10 rounded-full bg-black flex items-center justify-center cursor-pointer\"\r\n          >\r\n            <FontAwesomeIcon icon={faChevronRight} className=\"text-white\" />\r\n          </a>\r\n        </div>\r\n        {location.pathname === \"/search\" && (\r\n          <div className=\"w-full flex items-center\">\r\n            <FontAwesomeIcon\r\n              icon={faSearch}\r\n              className=\"text-black fixed ml-3\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"카테고리명 또는 플레이리스트를 검색하세요\"\r\n              onChange={props.handleOnchange}\r\n              className=\"w-full w-auto h-10 rounded-3xl text-sm outline-none text-left text-black overflow-ellipsis pl-10\"\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"w-3/5 flex items-center justify-end\">\r\n        <div\r\n          className=\"h-10 bg-black rounded-3xl flex items-center hover:bg-gray-800 cursor-pointer\"\r\n          onClick={onMenuBox}\r\n        >\r\n          <div className=\"w-7 h-7 rounded-full bg-gray-600 flex items-center justify-center mx-2\">\r\n            <FontAwesomeIcon icon={faUser} className=\"text-xs text-white\" />\r\n          </div>\r\n          <div className=\"mr-2 hidden lg:block text-sm font-bold\">\r\n            <span>{me?.me.email}</span>\r\n          </div>\r\n          <div className=\"mr-5 hidden lg:block\">\r\n            {!menuBox ? (\r\n              <FontAwesomeIcon icon={faCaretDown} className=\"text-white\" />\r\n            ) : (\r\n              <FontAwesomeIcon icon={faCaretUp} className=\"text-white\" />\r\n            )}\r\n          </div>\r\n        </div>\r\n        {menuBox && (\r\n          <div className=\"w-32 h-24 bg-black rounded-md fixed top-12 mt-2 flex flex-col justify-around\">\r\n            <div className=\"w-full\">\r\n              <Link\r\n                to=\"/my-profile\"\r\n                className=\"flex items-center hover:text-white mx-2 p-2 rounded-md hover:bg-gray-800 hover:text-white\"\r\n              >\r\n                <span className=\"text-sm\">프로필</span>\r\n              </Link>\r\n            </div>\r\n            <div className=\"w-full\">\r\n              <Link\r\n                to=\"/logout\"\r\n                className=\"flex items-center hover:text-white mx-2 p-2 rounded-md hover:bg-gray-800 hover:text-white\"\r\n              >\r\n                <span className=\"text-sm\">로그아웃</span>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\host\\my-podcasts.tsx",[],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\listener\\my-subscriptions.tsx",[],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\host\\edit-podcast.tsx",["163","164"],"import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport podcastDefault from \"../../images/podcast_default.svg\";\r\nimport { Button } from \"../../components/button\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { IUpdatePodcastForm, PODCAST_QUERY } from \"./host-home\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport {\r\n  updatePodcastMutation,\r\n  updatePodcastMutationVariables,\r\n} from \"../../__generated__/updatePodcastMutation\";\r\nimport {\r\n  deletePodcastMutation,\r\n  deletePodcastMutationVariables,\r\n} from \"../../__generated__/deletePodcastMutation\";\r\nimport { DocumentNode } from \"graphql\";\r\n\r\nconst UPDATE_PODCAST_MUTATION = gql`\r\n  mutation updatePodcastMutation($updatePodcastInput: UpdatePodcastInput!) {\r\n    updatePodcast(input: $updatePodcastInput) {\r\n      error\r\n      ok\r\n    }\r\n  }\r\n`;\r\nconst DELETE_PODCAST_MUTATION = gql`\r\n  mutation deletePodcastMutation($deletePodcastInput: PodcastSearchInput!) {\r\n    deletePodcast(input: $deletePodcastInput) {\r\n      error\r\n      ok\r\n    }\r\n  }\r\n`;\r\n\r\nexport const EditPodcast = (props: any) => {\r\n  const podcast = props.podcast;\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const setEditDetail = () => props.onEditBoxClick(props.editBoxState);\r\n  const onCompleted = (data: updatePodcastMutation) => {\r\n    const {\r\n      updatePodcast: { ok },\r\n    } = data;\r\n    if (ok) {\r\n      history.push(location.pathname);\r\n      setEditDetail();\r\n    }\r\n  };\r\n  const [updatePodcastMutation, { loading }] = useMutation<\r\n    updatePodcastMutation,\r\n    updatePodcastMutationVariables\r\n  >(UPDATE_PODCAST_MUTATION, {\r\n    onCompleted,\r\n    refetchQueries: [{ query: PODCAST_QUERY }],\r\n  });\r\n  const onSubmit = () => {\r\n    if (!loading) {\r\n      let { id, title, category, description } = getValues();\r\n      id = +id;\r\n      updatePodcastMutation({\r\n        variables: {\r\n          updatePodcastInput: { id, title, category, description },\r\n        },\r\n      });\r\n    }\r\n  };\r\n  const onDeletePodcast = () => {\r\n    if (\r\n      window.confirm(\r\n        \"플레이리스트 및 노래가 모두 삭제됩니다.\\n삭제하시겠습니까? \"\r\n      )\r\n    ) {\r\n      onDeleteSubmit();\r\n    }\r\n  };\r\n  const [deletePodcastMutation, { loading: loadingDelete }] = useMutation<\r\n    deletePodcastMutation,\r\n    deletePodcastMutationVariables\r\n  >(DELETE_PODCAST_MUTATION, {\r\n    refetchQueries: [{ query: PODCAST_QUERY }],\r\n  });\r\n  const onDeleteSubmit = () => {\r\n    if (!loadingDelete) {\r\n      let { id } = getValues();\r\n      id = +id;\r\n      deletePodcastMutation({\r\n        variables: {\r\n          deletePodcastInput: { id },\r\n        },\r\n      });\r\n\r\n      setTimeout(() => {\r\n        history.push(\"/\");\r\n      }, 1500);\r\n    }\r\n  };\r\n  const { register, getValues, handleSubmit, formState } = useForm<\r\n    IUpdatePodcastForm\r\n  >({\r\n    mode: \"onChange\",\r\n    defaultValues: {\r\n      id: podcast?.id,\r\n      title: podcast?.title,\r\n      category: podcast?.category,\r\n      description: podcast?.description,\r\n    },\r\n  });\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <div className=\"absolute top-0 left-0 right-0 bottom-0 w-full h-screen\">\r\n        <div className=\"w-full h-screen bg-black bg-opacity-80\"></div>\r\n\r\n        <input type=\"hidden\" name=\"id\" ref={register} />\r\n        <div className=\"absolute top-0 left-0 right-0 bottom-0 flex items-center justify-center\">\r\n          <div\r\n            className=\"flex flex-col text-white rounded-xl\"\r\n            style={{\r\n              width: \"420px\",\r\n              height: \"300px\",\r\n              backgroundColor: \"#282828\",\r\n            }}\r\n          >\r\n            <div className=\"w-full h-1/5 flex justify-between p-5\">\r\n              <h1 className=\"font-bold text-xl\">Edit details</h1>\r\n              <a\r\n                onClick={setEditDetail}\r\n                className=\"flex items-center justify-center cursor-pointer\"\r\n              >\r\n                <FontAwesomeIcon icon={faTimes} />\r\n              </a>\r\n            </div>\r\n            <div className=\"w-full h-3/5 px-5 flex justify-between\">\r\n              <div className=\"w-1/2 h-full\">\r\n                <img\r\n                  src={podcastDefault}\r\n                  className=\"w-full h-full bg-gray-700\"\r\n                  alt=\"thumnail\"\r\n                />\r\n              </div>\r\n              <div className=\"w-1/2 h-full pl-5 flex flex-col\">\r\n                <div className=\"relative h-1/5 mb-2\">\r\n                  <label\r\n                    className={`absolute opacity-60`}\r\n                    style={{\r\n                      top: \"-8px\",\r\n                      left: \"5px\",\r\n                      fontSize: \"8px\",\r\n                      transition: \"opacity .2s\",\r\n                    }}\r\n                  >\r\n                    <span>Title</span>\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    required\r\n                    ref={register({ required: true })}\r\n                    className=\"w-full outline-none rounded-md text-xs px-3\"\r\n                    style={{\r\n                      height: \"30px\",\r\n                      background: \"hsla(0,0%,100%,.1)\",\r\n                      backgroundColor:\r\n                        \"internal-light-dark(rgb(255, 255, 255), rgb(59, 59, 59)\",\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"relative h-1/5 mb-2\">\r\n                  <label\r\n                    className={`absolute opacity-60`}\r\n                    style={{\r\n                      top: \"-8px\",\r\n                      left: \"5px\",\r\n                      fontSize: \"8px\",\r\n                      transition: \"opacity .2s\",\r\n                    }}\r\n                  >\r\n                    <span>Category</span>\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"category\"\r\n                    required\r\n                    ref={register({ required: true })}\r\n                    className=\"w-full outline-none rounded-md text-xs px-3\"\r\n                    style={{\r\n                      height: \"30px\",\r\n                      background: \"hsla(0,0%,100%,.1)\",\r\n                      backgroundColor:\r\n                        \"internal-light-dark(rgb(255, 255, 255), rgb(59, 59, 59)\",\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"relative h-3/5\">\r\n                  <label\r\n                    className={`absolute opacity-60`}\r\n                    style={{\r\n                      top: \"-8px\",\r\n                      left: \"5px\",\r\n                      fontSize: \"8px\",\r\n                      transition: \"opacity .2s\",\r\n                    }}\r\n                  >\r\n                    <span>Description</span>\r\n                  </label>\r\n                  <textarea\r\n                    className=\"resize-none w-full h-full outline-none rounded-md text-xs p-3\"\r\n                    name=\"description\"\r\n                    ref={register}\r\n                    style={{\r\n                      background: \"hsla(0,0%,100%,.1)\",\r\n                      backgroundColor:\r\n                        \"internal-light-dark(rgb(255, 255, 255), rgb(59, 59, 59)\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"w-full h-1/5 px-5 flex justify-between\">\r\n              <div className=\"w-1/2 flex items-center justify-end\">\r\n                <button\r\n                  onClick={onDeletePodcast}\r\n                  className={\r\n                    \"w-full text-sm font-sm focus:outline-none text-white py-3 rounded-3xl transition-colors \" +\r\n                    \"bg-red-500 hover:bg-red-400 bg-red-600 bg-opacity-80 hover:bg-red-400\"\r\n                  }\r\n                >\r\n                  {loading ? \"Loading...\" : \"삭제하기\"}\r\n                </button>\r\n              </div>\r\n              <div className=\"w-1/2 pl-5 flex items-center justify-end\">\r\n                <Button\r\n                  canClick={formState.isValid}\r\n                  loading={loading}\r\n                  actionText={\"저장하기\"}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\components\\search-api-episodes.tsx",["165","166"],"import React from \"react\";\r\nimport podcastDefault from \"../images/podcast_default.svg\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport { PODCAST_QUERY } from \"../pages/host/host-home\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {\r\n  createEpisodeMutation,\r\n  createEpisodeMutationVariables,\r\n} from \"../__generated__/createEpisodeMutation\";\r\nimport {\r\n  notifyInfo,\r\n  notifySuccess,\r\n} from \"../pages/listener/detail-subscription\";\r\n\r\nexport interface IEpisode {\r\n  podcastId: number;\r\n  title: string;\r\n  category: string;\r\n  imageUrl?: string;\r\n  playTime?: number;\r\n}\r\n\r\nconst CREATE_EPISODE_MUTATION = gql`\r\n  mutation createEpisodeMutation($createEpisodeInput: CreateEpisodeInput!) {\r\n    createEpisode(input: $createEpisodeInput) {\r\n      error\r\n      ok\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SearchApiEpisodes = (props: any) => {\r\n  const episode = props.data.episode;\r\n  const index = props.data.index + 1;\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const podcastId = +location.pathname.replace(\"/podcasts/\", \"\");\r\n  const onCompleted = (data: createEpisodeMutation) => {\r\n    const {\r\n      createEpisode: { ok },\r\n    } = data;\r\n    if (ok) {\r\n      notifySuccess(\r\n        <div className={`text-sm`}>플레이리스트에 추가되었습니다.</div>\r\n      );\r\n      setTimeout(() => {\r\n        history.push(`/podcasts/${podcastId}`);\r\n      }, 1500);\r\n    }\r\n  };\r\n  const [createEpisodeMutation, { loading }] = useMutation<\r\n    createEpisodeMutation,\r\n    createEpisodeMutationVariables\r\n  >(CREATE_EPISODE_MUTATION, {\r\n    onCompleted,\r\n    refetchQueries: [{ query: PODCAST_QUERY }],\r\n  });\r\n\r\n  const onCreateEpisode = () => {\r\n    if (!loading) {\r\n      const title = episode.title;\r\n      const category = episode.category;\r\n      const imageUrl = episode.imageUrl;\r\n      const playTime = episode.playTime;\r\n\r\n      notifyInfo(<div className={`text-sm`}>플레이리스트에 추가합니다.</div>);\r\n\r\n      createEpisodeMutation({\r\n        variables: {\r\n          createEpisodeInput: {\r\n            podcastId,\r\n            title,\r\n            category,\r\n            imageUrl,\r\n            playTime,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section\r\n      key={episode?.id}\r\n      className={`\r\n                  grid gap-4 grid-cols-5 \r\n                  h-15 \r\n                  text-sm \r\n                  hover:border hover:border-gray-500 hover:border-opacity-90 \r\n                  hover:bg-gray-500 hover:bg-opacity-20 rounded-md pl-5 py-2 ${\r\n                    index === 0 ? `mt-5` : ``\r\n                  }`}\r\n      style={{\r\n        gridTemplateColumns:\r\n          \"[index] 16px [first] 6fr [var1] 4fr [var2] minmax(120px,1fr) [last] 2fr\",\r\n      }}\r\n    >\r\n      <span className=\"flex items-center\">{index}</span>\r\n      <div className=\"flex items-center\">\r\n        {episode?.imageUrl ? (\r\n          <img src={episode?.imageUrl} className=\"w-10 h-10\" alt=\"thumnail\" />\r\n        ) : (\r\n          <img\r\n            src={podcastDefault}\r\n            className=\"w-10 h-10 bg-gray-700\"\r\n            alt=\"thumnail\"\r\n          />\r\n        )}\r\n        <span className=\"text-white pl-3\">{episode?.title}</span>\r\n      </div>\r\n      <span className=\"flex items-center\">{episode?.category}</span>\r\n      <span className=\"flex items-center\">{`${\r\n        episode?.playTime\r\n          ? `${Math.floor(episode?.playTime / 60000)}:${(\r\n              episode?.playTime % 60000\r\n            )\r\n              .toString()\r\n              .substring(0, 2)}`\r\n          : ``\r\n      }`}</span>\r\n      <div className=\"flex items-center\">\r\n        <div\r\n          className=\"border border-gray-600 rounded-3xl hover:border-white hover:bg-gray-900 cursor-pointer flex items-center justify-center\"\r\n          style={{ width: \"120px\", height: \"35px\" }}\r\n        >\r\n          <a onClick={onCreateEpisode}>\r\n            <span className=\"text-white text-xs font-bold\">추가하기</span>\r\n          </a>\r\n          <ToastContainer\r\n            position=\"bottom-center\"\r\n            autoClose={3000}\r\n            hideProgressBar\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n          />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\components\\thumbnail.tsx",["167","168","169","170"],"import React from \"react\";\r\nimport podcastDefault from \"../images/podcast_default.svg\";\r\nimport { IEpisode } from \"./search-api-episodes\";\r\n\r\nexport const Thumbnail = (props: any) => {\r\n  const podcast = props.data;\r\n  let img1, img2, img3, img4, defaultImg;\r\n  podcast?.episodes.forEach((episode: IEpisode, index: number) => {\r\n    if (podcast?.episodes.length >= 1) {\r\n      if (index == 0) {\r\n        img1 = (\r\n          <img\r\n            src={episode?.imageUrl}\r\n            style={{ width: \"100px\", height: \"100px\" }}\r\n            alt=\"\"\r\n          />\r\n        );\r\n        defaultImg = (\r\n          <img\r\n            src={episode?.imageUrl}\r\n            style={{ width: \"200px\", height: \"200px\" }}\r\n            alt=\"\"\r\n          />\r\n        );\r\n      }\r\n      if (index == 1)\r\n        img2 = (\r\n          <img\r\n            src={episode?.imageUrl}\r\n            style={{ width: \"100px\", height: \"100px\" }}\r\n            alt=\"\"\r\n          />\r\n        );\r\n      if (index == 2)\r\n        img3 = (\r\n          <img\r\n            src={episode?.imageUrl}\r\n            style={{ width: \"100px\", height: \"100px\" }}\r\n            alt=\"\"\r\n          />\r\n        );\r\n      if (index == 3)\r\n        img4 = (\r\n          <img\r\n            src={episode?.imageUrl}\r\n            style={{ width: \"100px\", height: \"100px\" }}\r\n            alt=\"\"\r\n          />\r\n        );\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"mx-2 flex items-center justify-center shadow-2xl\">\r\n      {podcast?.episodes.length === 0 && (\r\n        <div className=\"flex\">\r\n          <img\r\n            src={podcastDefault}\r\n            className=\"bg-gray-700\"\r\n            style={{ width: \"200px\", height: \"200px\" }}\r\n            alt=\"podcast default\"\r\n          />\r\n        </div>\r\n      )}\r\n      {podcast?.episodes.length >= 1 && podcast?.episodes.length < 4 && (\r\n        <div className=\"flex\">{defaultImg}</div>\r\n      )}\r\n      {podcast?.episodes.length >= 4 && (\r\n        <div className=\"grid grid-cols-2 grid-rows-2\">\r\n          {img1}\r\n          {img2}\r\n          {img3}\r\n          {img4}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\host\\podcast.tsx",["171","172"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport podcastDefault from \"../../images/podcast_default.svg\";\r\nimport {Thumbnail} from \"../../components/thumbnail\";\r\n\r\ninterface IPodcastProps {\r\n  id: string;\r\n  title: string;\r\n  category: string;\r\n  description?: string;\r\n}\r\n\r\nexport const Podcast = (props: any) => {\r\n  const podcast = props.data.podcast;\r\n  return (\r\n    <Link to={`/podcasts/${podcast.id}`}>\r\n      <div className=\"flex flex-col bg-gray-900 w-full\">\r\n        <div className=\"pt-5 flex items-center justify-center\">\r\n          <Thumbnail data={podcast} />\r\n        </div>\r\n        <span className=\"p-3 h-10 text-sm opacity-70 border-gray-800 overflow-hidden overflow-ellipsis\">\r\n          {podcast.category}\r\n        </span>\r\n        <div className=\"text-lg font-bold text-white px-3 pt-1 overflow-hidden overflow-ellipsis whitespace-nowrap w-auto h-14\">\r\n          {podcast.title}\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\components\\episodes.tsx",[],{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":46,"column":7,"nodeType":"179","messageId":"180","endLine":46,"endColumn":16},{"ruleId":"177","severity":1,"message":"181","line":12,"column":26,"nodeType":"179","messageId":"180","endLine":12,"endColumn":31},{"ruleId":"182","severity":1,"message":"183","line":144,"column":15,"nodeType":"184","endLine":147,"endColumn":16},{"ruleId":"177","severity":1,"message":"185","line":4,"column":8,"nodeType":"179","messageId":"180","endLine":4,"endColumn":15},{"ruleId":"177","severity":1,"message":"186","line":8,"column":10,"nodeType":"179","messageId":"180","endLine":8,"endColumn":14},{"ruleId":"187","severity":1,"message":"188","line":16,"column":6,"nodeType":"189","endLine":16,"endColumn":8,"suggestions":"190"},{"ruleId":"182","severity":1,"message":"183","line":30,"column":15,"nodeType":"184","endLine":30,"endColumn":66},{"ruleId":"182","severity":1,"message":"183","line":35,"column":15,"nodeType":"184","endLine":35,"endColumn":67},{"ruleId":"182","severity":1,"message":"183","line":68,"column":13,"nodeType":"184","endLine":68,"endColumn":67},{"ruleId":"182","severity":1,"message":"183","line":124,"column":19,"nodeType":"184","endLine":128,"endColumn":20},{"ruleId":"177","severity":1,"message":"191","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":22},{"ruleId":"177","severity":1,"message":"192","line":13,"column":10,"nodeType":"179","messageId":"180","endLine":13,"endColumn":18},{"ruleId":"182","severity":1,"message":"183","line":51,"column":13,"nodeType":"184","endLine":51,"endColumn":68},{"ruleId":"177","severity":1,"message":"193","line":9,"column":3,"nodeType":"179","messageId":"180","endLine":9,"endColumn":9},{"ruleId":"182","severity":1,"message":"183","line":34,"column":11,"nodeType":"184","endLine":37,"endColumn":12},{"ruleId":"182","severity":1,"message":"183","line":42,"column":11,"nodeType":"184","endLine":45,"endColumn":12},{"ruleId":"177","severity":1,"message":"194","line":18,"column":10,"nodeType":"179","messageId":"180","endLine":18,"endColumn":22},{"ruleId":"182","severity":1,"message":"183","line":127,"column":15,"nodeType":"184","endLine":130,"endColumn":16},{"ruleId":"177","severity":1,"message":"181","line":6,"column":26,"nodeType":"179","messageId":"180","endLine":6,"endColumn":31},{"ruleId":"182","severity":1,"message":"183","line":130,"column":11,"nodeType":"184","endLine":130,"endColumn":40},{"ruleId":"195","severity":1,"message":"196","line":10,"column":17,"nodeType":"197","messageId":"198","endLine":10,"endColumn":19},{"ruleId":"195","severity":1,"message":"196","line":26,"column":17,"nodeType":"197","messageId":"198","endLine":26,"endColumn":19},{"ruleId":"195","severity":1,"message":"196","line":34,"column":17,"nodeType":"197","messageId":"198","endLine":34,"endColumn":19},{"ruleId":"195","severity":1,"message":"196","line":42,"column":17,"nodeType":"197","messageId":"198","endLine":42,"endColumn":19},{"ruleId":"177","severity":1,"message":"191","line":3,"column":8,"nodeType":"179","messageId":"180","endLine":3,"endColumn":22},{"ruleId":"177","severity":1,"message":"199","line":6,"column":11,"nodeType":"179","messageId":"180","endLine":6,"endColumn":24},"no-native-reassign",["200"],"no-negated-in-lhs",["201"],"@typescript-eslint/no-unused-vars","'splitLink' is assigned a value but never used.","Identifier","unusedVar","'toast' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'circles' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'client.cache' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["202"],"'podcastDefault' is defined but never used.","'IEpisode' is defined but never used.","'faHome' is defined but never used.","'DocumentNode' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'IPodcastProps' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"203","fix":"204"},"Update the dependencies array to be: [client.cache, history]",{"range":"205","text":"206"},[424,426],"[client.cache, history]"]