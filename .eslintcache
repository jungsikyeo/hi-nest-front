[{"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\index.tsx":"1","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\reportWebVitals.ts":"2","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\apollo.ts":"3","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\App.tsx":"4","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\constants.ts":"5","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\routers\\logged-in-router.tsx":"6","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\routers\\logged-out-router.tsx":"7","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\__generated__\\globalTypes.ts":"8","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\components\\footer.tsx":"9","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\hooks\\useMe.tsx":"10","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\components\\button.tsx":"11","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\components\\header.tsx":"12","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\components\\form-error.tsx":"13","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\listener\\listener-home.tsx":"14","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\host\\host-home.tsx":"15","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\common\\404.tsx":"16","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\common\\create-account.tsx":"17","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\common\\home.tsx":"18","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\common\\logout.tsx":"19","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\common\\login.tsx":"20","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\components\\edit-podcast.tsx":"21","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\components\\my-podcasts.tsx":"22","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\components\\search.tsx":"23","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\components\\podcast.tsx":"24","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\fragments.ts":"25"},{"size":748,"mtime":1612758172431,"results":"26","hashOfConfig":"27"},{"size":440,"mtime":1612758172446,"results":"28","hashOfConfig":"27"},{"size":1228,"mtime":1613074118685,"results":"29","hashOfConfig":"27"},{"size":375,"mtime":1612758172394,"results":"30","hashOfConfig":"27"},{"size":34,"mtime":1612758172411,"results":"31","hashOfConfig":"27"},{"size":2025,"mtime":1613074661701,"results":"32","hashOfConfig":"27"},{"size":879,"mtime":1613072546830,"results":"33","hashOfConfig":"27"},{"size":850,"mtime":1613072546797,"results":"34","hashOfConfig":"27"},{"size":4160,"mtime":1613072622991,"results":"35","hashOfConfig":"27"},{"size":282,"mtime":1612758172413,"results":"36","hashOfConfig":"27"},{"size":531,"mtime":1612758172404,"results":"37","hashOfConfig":"27"},{"size":5448,"mtime":1612758172409,"results":"38","hashOfConfig":"27"},{"size":238,"mtime":1612758172408,"results":"39","hashOfConfig":"27"},{"size":205,"mtime":1613072546827,"results":"40","hashOfConfig":"27"},{"size":4380,"mtime":1613078820794,"results":"41","hashOfConfig":"27"},{"size":1756,"mtime":1613072546818,"results":"42","hashOfConfig":"27"},{"size":5519,"mtime":1613072546820,"results":"43","hashOfConfig":"27"},{"size":2557,"mtime":1613072546822,"results":"44","hashOfConfig":"27"},{"size":608,"mtime":1613072546824,"results":"45","hashOfConfig":"27"},{"size":5021,"mtime":1613072546823,"results":"46","hashOfConfig":"27"},{"size":1282,"mtime":1613072546800,"results":"47","hashOfConfig":"27"},{"size":1212,"mtime":1613078897769,"results":"48","hashOfConfig":"27"},{"size":3614,"mtime":1613078690356,"results":"49","hashOfConfig":"27"},{"size":951,"mtime":1613072546810,"results":"50","hashOfConfig":"27"},{"size":176,"mtime":1613074511167,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1xmlslo",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\index.tsx",[],["107","108"],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\reportWebVitals.ts",[],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\apollo.ts",[],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\App.tsx",[],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\constants.ts",[],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\routers\\logged-in-router.tsx",[],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\routers\\logged-out-router.tsx",[],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\__generated__\\globalTypes.ts",[],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\components\\footer.tsx",["109","110"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport spotifyLogoWhite from \"../images/spotify_logo_white.svg\";\r\nimport instagramIcon from \"../images/instagram_icon.svg\";\r\nimport facebookIcon from \"../images/facebook_icon.svg\";\r\n\r\nexport const Footer: React.FC = () => {\r\n  const detailInfo = () => {\r\n    alert(\"비밀~ ^.^;\");\r\n  };\r\n  const recruitInfo = () => {\r\n    alert(\"힝 속았지~? ^.~\");\r\n  };\r\n  return (\r\n    <footer className=\"bg-black xl:w-full xl:bottom-0 xl:fixed\">\r\n      <div className=\"w-full px-3 py-16 xl:px-0 flex flex-col items-start sm:flex-col sm:items-start lg:flex-row lg:justify-around\">\r\n        <Link to=\"/\" className=\"mb-12 md:px-20\">\r\n          <div className=\"text-sm flex items-center\">\r\n            <img\r\n              src={spotifyLogoWhite}\r\n              className=\"w-20 lg:w-48\"\r\n              alt=\"Spotify\"\r\n            />\r\n          </div>\r\n        </Link>\r\n        <div className=\"flex flex-col md:px-20 md:w-full md:flex-row md:justify-between\">\r\n          <div className=\"text-white flex flex-col items-start mb-12\">\r\n            <span className=\"text-gray-500 text-xs font-bold\">회사</span>\r\n            <span className=\"pt-3 text-sm font-bold\">\r\n              <a onClick={detailInfo} className=\"cursor-pointer\">\r\n                상세정보\r\n              </a>\r\n            </span>\r\n            <span className=\"pt-3 text-sm font-bold\">\r\n              <a onClick={recruitInfo} className=\"cursor-pointer\">\r\n                채용정보\r\n              </a>\r\n            </span>\r\n          </div>\r\n          <div className=\"text-white flex flex-col items-start mb-12\">\r\n            <span className=\"text-gray-500 text-xs font-bold\">커뮤니티</span>\r\n            <span className=\"pt-3 text-sm font-bold\">\r\n              <a href=\"https://nomadcoders.co/users/mdotcom12\">개발자</a>\r\n            </span>\r\n            <span className=\"pt-3 text-sm font-bold\">\r\n              <a href=\"https://nomadcoders.co/users/mdotcom12\">투자자</a>\r\n            </span>\r\n            <span className=\"pt-3 text-sm font-bold\">\r\n              <a href=\"https://nomadcoders.co/users/serranoarevalo\">공급업체</a>\r\n            </span>\r\n          </div>\r\n          <div className=\"text-white flex flex-col items-start mb-12\">\r\n            <span className=\"text-gray-500 text-xs font-bold\">\r\n              노마드코더 링크\r\n            </span>\r\n            <span className=\"pt-3 text-sm font-bold\">\r\n              <a href=\"https://nomadcoders.co/courses\">코스</a>\r\n            </span>\r\n            <span className=\"pt-3 text-sm font-bold\">\r\n              <a href=\"https://nomadcoders.co/challenges\">챌린지</a>\r\n            </span>\r\n            <span className=\"pt-3 text-sm font-bold\">\r\n              <a href=\"https://nomadcoders.co/community\">수다방</a>\r\n            </span>\r\n            <span className=\"pt-3 text-sm font-bold\">\r\n              <a href=\"https://nomadcoders.co/faq\">FAQ</a>\r\n            </span>\r\n            <span className=\"pt-3 text-sm font-bold\">\r\n              <a href=\"https://nomadcoders.co/roadmap\">로드맵</a>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <ul className=\"flex flex-row justify-start md:px-20\">\r\n          <li className=\"mr-3\">\r\n            <a\r\n              href=\"https://instagram.com/1985yjs\"\r\n              className=\"rounded-3xl bg-gray-800 w-10 h-10 inline-flex items-center justify-center\"\r\n              title=\"Instagram\"\r\n            >\r\n              <img\r\n                src={instagramIcon}\r\n                className=\"w-5 h-5 bg-white\"\r\n                alt=\"instagram\"\r\n              />\r\n            </a>\r\n          </li>\r\n          <li className=\"mr-3\">\r\n            <a\r\n              href=\"https://facebook.com/jeongsik.yeo/\"\r\n              className=\"rounded-3xl bg-gray-800 w-10 h-10 inline-flex items-center justify-center\"\r\n              title=\"Facebook\"\r\n            >\r\n              <img\r\n                src={facebookIcon}\r\n                className=\"w-5 h-5 bg-white\"\r\n                alt=\"facebook\"\r\n              />\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\hooks\\useMe.tsx",[],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\components\\button.tsx",[],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\components\\header.tsx",["111","112"],"import {\r\n  faUser,\r\n  faBars,\r\n  faTimes,\r\n  faSignOutAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useMe } from \"../hooks/useMe\";\r\nimport spotifyLogoWhite from \"../images/spotify_logo_white.svg\";\r\n\r\nexport const Header: React.FC = () => {\r\n  const { data } = useMe();\r\n  const [editing, setEditing] = useState(false);\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n  return (\r\n    <header className=\"bg-black\">\r\n      <div className=\"w-full px-3 py-2 xl:px-0 max-w-screen-xl mx-auto flex justify-between items-center\">\r\n        <Link to=\"/\">\r\n          <div className=\"text-sm flex items-center\">\r\n            <img\r\n              src={spotifyLogoWhite}\r\n              className=\"w-20 md:w-40\"\r\n              alt=\"Spotify\"\r\n            />\r\n          </div>\r\n        </Link>\r\n        <div className=\"flex\">\r\n          {data?.me ? (\r\n            <div className=\"flex flex-row justify-between\">\r\n              <div className=\"text-xs pr-3 flex items-center\">\r\n                <Link to=\"/my-profile\" className=\"hover:text-green-500\">\r\n                  <div className=\"w-full p-2 rounded-3xl border-2 border-white\">\r\n                    <FontAwesomeIcon\r\n                      icon={faUser}\r\n                      className=\"text-sm text-white\"\r\n                    />\r\n                  </div>\r\n                </Link>\r\n              </div>\r\n              <div className=\"w-full p-2 text-white hidden md:block\">\r\n                <Link\r\n                  to=\"/logout\"\r\n                  className=\"flex items-center hover:text-green-500\"\r\n                >\r\n                  <FontAwesomeIcon icon={faSignOutAlt} className=\"text-2xl\" />\r\n                  <span className=\"\">로그아웃</span>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"hidden md:block text-white font-bold\">\r\n              <span className=\"pr-8\">\r\n                <Link to=\"/create-account\" className=\"hover:text-green-500\">\r\n                  가입하기\r\n                </Link>\r\n              </span>\r\n              <span className=\"pr-8\">\r\n                <Link to=\"/login\" className=\"hover:text-green-500\">\r\n                  로그인하기\r\n                </Link>\r\n              </span>\r\n            </div>\r\n          )}\r\n          <span className=\"w-full p-2 md:hidden\">\r\n            <a onClick={toggleEditing} className=\"cursor-pointer\">\r\n              <FontAwesomeIcon\r\n                icon={faBars}\r\n                className=\"text-2xl text-white hover:text-green-500\"\r\n              />\r\n            </a>\r\n          </span>\r\n        </div>\r\n        {editing ? (\r\n          <div className=\"flex absolute left-full md:hidden\">\r\n            <div className=\"left-0 bg-black w-screen h-screen fixed top-0 opacity-50 z-40\">\r\n              {\"\"}\r\n            </div>\r\n            <nav className=\"flex flex-col justify-between right-0 bg-black border-0 m-0 p-8 h-screen fixed top-0 w-80 z-40 text-white font-bold\">\r\n              <div className=\"flex flex-row justify-between\">\r\n                <ul>\r\n                  <li className=\"text-3xl pb-6\">\r\n                    {!data?.me ? (\r\n                      <Link\r\n                        to=\"/create-account\"\r\n                        onClick={toggleEditing}\r\n                        className=\"hover:text-green-500\"\r\n                      >\r\n                        가입하기\r\n                      </Link>\r\n                    ) : (\r\n                      <Link\r\n                        to=\"/my-profile\"\r\n                        onClick={toggleEditing}\r\n                        className=\"hover:text-green-500\"\r\n                      >\r\n                        계정\r\n                      </Link>\r\n                    )}\r\n                  </li>\r\n                  <li className=\"text-3xl pb-6\">\r\n                    {!data?.me ? (\r\n                      <Link\r\n                        to=\"/login\"\r\n                        onClick={toggleEditing}\r\n                        className=\"hover:text-green-500\"\r\n                      >\r\n                        로그인하기\r\n                      </Link>\r\n                    ) : (\r\n                      <Link\r\n                        to=\"/logout\"\r\n                        onClick={toggleEditing}\r\n                        className=\"hover:text-green-500\"\r\n                      >\r\n                        로그아웃하기\r\n                      </Link>\r\n                    )}\r\n                  </li>\r\n                </ul>\r\n                <span>\r\n                  <a\r\n                    type=\"button\"\r\n                    onClick={toggleEditing}\r\n                    className=\"text-white z-50 cursor-pointer\"\r\n                  >\r\n                    <FontAwesomeIcon\r\n                      icon={faTimes}\r\n                      className=\"text-2xl text-white hover:text-green-500\"\r\n                    />\r\n                  </a>\r\n                </span>\r\n              </div>\r\n              <Link to=\"/\">\r\n                <div className=\"text-sm flex items-center\">\r\n                  <img src={spotifyLogoWhite} className=\"w-20\" alt=\"Spotify\" />\r\n                </div>\r\n              </Link>\r\n            </nav>\r\n          </div>\r\n        ) : (\r\n          ``\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\components\\form-error.tsx",[],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\listener\\listener-home.tsx",[],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\host\\host-home.tsx",["113","114"],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\common\\404.tsx",[],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\common\\create-account.tsx",[],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\common\\home.tsx",[],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\common\\logout.tsx",["115"],"import { useApolloClient } from \"@apollo/client\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeLogout } from \"../../apollo\";\r\n\r\nexport const Logout = () => {\r\n  const history = useHistory();\r\n  const client = useApolloClient();\r\n\r\n  useEffect(() => {\r\n    client.cache.reset().then(async () => {\r\n      await makeLogout();\r\n    });\r\n\r\n    history.push(\"/\");\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"h-screen flex justify-center items-center\">\r\n      <span className=\"font-medium text-xl tracking-wide\">Loading...</span>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\pages\\common\\login.tsx",[],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\components\\edit-podcast.tsx",[],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\components\\my-podcasts.tsx",[],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\components\\search.tsx",["116","117","118"],"import React, { useState } from \"react\";\r\nimport {\r\n  faChevronLeft,\r\n  faChevronRight,\r\n  faCaretDown,\r\n  faUser,\r\n  faSearch,\r\n  faCaretUp,\r\n  faHome,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nexport const Search = (props: any) => {\r\n  const history = useHistory();\r\n  const back = () => {\r\n    history.goBack();\r\n  };\r\n  const forward = () => {\r\n    history.goForward();\r\n  };\r\n\r\n  const [menuBox, setMenuBox] = useState(false);\r\n  const onMenuBox = () => setMenuBox((menuBox) => (menuBox = !menuBox));\r\n\r\n  return (\r\n    <section className=\"flex justify-between py-2\">\r\n      <div className=\"w-1/3 flex flex-row items-center justify-start\">\r\n        <div className=\"mr-3 \">\r\n          <a\r\n            onClick={back}\r\n            className=\"w-10 h-10 rounded-full bg-black flex items-center justify-center cursor-pointer\"\r\n          >\r\n            <FontAwesomeIcon icon={faChevronLeft} className=\"text-white\" />\r\n          </a>\r\n        </div>\r\n        <div className=\"mr-3 hidden sm:block\">\r\n          <a\r\n            onClick={forward}\r\n            className=\"w-10 h-10 rounded-full bg-black flex items-center justify-center cursor-pointer\"\r\n          >\r\n            <FontAwesomeIcon icon={faChevronRight} className=\"text-white\" />\r\n          </a>\r\n        </div>\r\n        <div className=\"w-full flex items-center\">\r\n          <FontAwesomeIcon icon={faSearch} className=\"text-black fixed ml-3\" />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"카테고리명 또는 팟캐스트를 검색하세요\"\r\n            onChange={props.handleOnchange}\r\n            className=\"w-full w-auto h-10 rounded-3xl text-sm outline-none text-left text-black overflow-ellipsis pl-10\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"flex items-center justify-end\"\r\n        style={{ paddingRight: \"220px\" }}\r\n      >\r\n        <div\r\n          className=\"h-10 bg-black rounded-3xl flex items-center hover:bg-gray-800 cursor-pointer\"\r\n          onClick={onMenuBox}\r\n        >\r\n          <div className=\"w-7 h-7 rounded-full bg-gray-600 flex items-center justify-center mx-2\">\r\n            <FontAwesomeIcon icon={faUser} className=\"text-xs text-white\" />\r\n          </div>\r\n          <div className=\"mr-2 hidden lg:block text-sm font-bold\">\r\n            <span>여정식</span>\r\n          </div>\r\n          <div className=\"mr-5 hidden lg:block\">\r\n            {!menuBox ? (\r\n              <FontAwesomeIcon icon={faCaretDown} className=\"text-white\" />\r\n            ) : (\r\n              <FontAwesomeIcon icon={faCaretUp} className=\"text-white\" />\r\n            )}\r\n          </div>\r\n        </div>\r\n        {menuBox && (\r\n          <div className=\"w-32 h-24 bg-black rounded-md fixed top-12 mt-2 flex flex-col justify-around\">\r\n            <div className=\"w-full\">\r\n              <Link\r\n                to=\"/my-profile\"\r\n                className=\"flex items-center hover:text-white mx-2 p-2 rounded-md hover:bg-gray-800 hover:text-white\"\r\n              >\r\n                <span className=\"text-sm\">프로필</span>\r\n              </Link>\r\n            </div>\r\n            <div className=\"w-full\">\r\n              <Link\r\n                to=\"/logout\"\r\n                className=\"flex items-center hover:text-white mx-2 p-2 rounded-md hover:bg-gray-800 hover:text-white\"\r\n              >\r\n                <span className=\"text-sm\">로그아웃</span>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","C:\\Users\\multicampus\\git\\hi-nest-front\\src\\components\\podcast.tsx",[],"C:\\Users\\multicampus\\git\\hi-nest-front\\src\\fragments.ts",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":30,"column":15,"nodeType":"125","endLine":30,"endColumn":66},{"ruleId":"123","severity":1,"message":"124","line":35,"column":15,"nodeType":"125","endLine":35,"endColumn":67},{"ruleId":"123","severity":1,"message":"124","line":68,"column":13,"nodeType":"125","endLine":68,"endColumn":67},{"ruleId":"123","severity":1,"message":"124","line":124,"column":19,"nodeType":"125","endLine":128,"endColumn":20},{"ruleId":"126","severity":1,"message":"127","line":25,"column":7,"nodeType":"128","messageId":"129","endLine":25,"endColumn":21},{"ruleId":"123","severity":1,"message":"124","line":88,"column":11,"nodeType":"125","endLine":88,"endColumn":147},{"ruleId":"130","severity":1,"message":"131","line":16,"column":6,"nodeType":"132","endLine":16,"endColumn":8,"suggestions":"133"},{"ruleId":"126","severity":1,"message":"134","line":9,"column":3,"nodeType":"128","messageId":"129","endLine":9,"endColumn":9},{"ruleId":"123","severity":1,"message":"124","line":30,"column":11,"nodeType":"125","endLine":33,"endColumn":12},{"ruleId":"123","severity":1,"message":"124","line":38,"column":11,"nodeType":"125","endLine":41,"endColumn":12},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","@typescript-eslint/no-unused-vars","'CREATE_PODCAST' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'client.cache' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["137"],"'faHome' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},"Update the dependencies array to be: [client.cache, history]",{"range":"140","text":"141"},[424,426],"[client.cache, history]"]