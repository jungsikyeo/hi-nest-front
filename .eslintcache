[{"/Users/yjs/Documents/GitHub/hi-nest-front/src/index.tsx":"1","/Users/yjs/Documents/GitHub/hi-nest-front/src/reportWebVitals.ts":"2","/Users/yjs/Documents/GitHub/hi-nest-front/src/App.tsx":"3","/Users/yjs/Documents/GitHub/hi-nest-front/src/apollo.ts":"4","/Users/yjs/Documents/GitHub/hi-nest-front/src/constants.ts":"5","/Users/yjs/Documents/GitHub/hi-nest-front/src/routers/logged-out-router.tsx":"6","/Users/yjs/Documents/GitHub/hi-nest-front/src/routers/logged-in-router.tsx":"7","/Users/yjs/Documents/GitHub/hi-nest-front/src/hooks/useMe.tsx":"8","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/create-account.tsx":"9","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/home.tsx":"10","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/logout.tsx":"11","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/login.tsx":"12","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/listener/listener-home.tsx":"13","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/404.tsx":"14","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/host/host-home.tsx":"15","/Users/yjs/Documents/GitHub/hi-nest-front/src/fragments.ts":"16","/Users/yjs/Documents/GitHub/hi-nest-front/src/components/form-error.tsx":"17","/Users/yjs/Documents/GitHub/hi-nest-front/src/components/button.tsx":"18","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/header.tsx":"19","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/footer.tsx":"20","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/host/my-podcasts.tsx":"21","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/host/detail-podcast.tsx":"22","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/search.tsx":"23","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/host/podcast.tsx":"24","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/host/edit-podcast.tsx":"25","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/listener/my-subscriptions.tsx":"26","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/listener/detail-subscription.tsx":"27","/Users/yjs/Documents/GitHub/hi-nest-front/src/components/episodes.tsx":"28","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/my-profile.tsx":"29","/Users/yjs/Documents/GitHub/hi-nest-front/src/__generated__/globalTypes.ts":"30","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/podcast-search.tsx":"31","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/listener/search-podcasts.tsx":"32","/Users/yjs/Documents/GitHub/hi-nest-front/src/components/search-api-episodes.tsx":"33","/Users/yjs/Documents/GitHub/hi-nest-front/src/components/thumbnail.tsx":"34"},{"size":725,"mtime":1612365860221,"results":"35","hashOfConfig":"36"},{"size":440,"mtime":1612365860224,"results":"37","hashOfConfig":"36"},{"size":366,"mtime":1612365860216,"results":"38","hashOfConfig":"36"},{"size":1934,"mtime":1613597869236,"results":"39","hashOfConfig":"36"},{"size":33,"mtime":1612365860220,"results":"40","hashOfConfig":"36"},{"size":841,"mtime":1612916984360,"results":"41","hashOfConfig":"36"},{"size":2139,"mtime":1613300980336,"results":"42","hashOfConfig":"36"},{"size":266,"mtime":1612365860220,"results":"43","hashOfConfig":"36"},{"size":5359,"mtime":1612916984357,"results":"44","hashOfConfig":"36"},{"size":3391,"mtime":1613606360550,"results":"45","hashOfConfig":"36"},{"size":585,"mtime":1612916984358,"results":"46","hashOfConfig":"36"},{"size":4877,"mtime":1612916984358,"results":"47","hashOfConfig":"36"},{"size":6488,"mtime":1613659702434,"results":"48","hashOfConfig":"36"},{"size":1680,"mtime":1613240010455,"results":"49","hashOfConfig":"36"},{"size":8989,"mtime":1613659702452,"results":"50","hashOfConfig":"36"},{"size":253,"mtime":1613597869239,"results":"51","hashOfConfig":"36"},{"size":229,"mtime":1612365860220,"results":"52","hashOfConfig":"36"},{"size":694,"mtime":1613606262433,"results":"53","hashOfConfig":"36"},{"size":5305,"mtime":1613240010445,"results":"54","hashOfConfig":"36"},{"size":4044,"mtime":1613597869247,"results":"55","hashOfConfig":"36"},{"size":1078,"mtime":1613597869264,"results":"56","hashOfConfig":"36"},{"size":4089,"mtime":1613597869262,"results":"57","hashOfConfig":"36"},{"size":3760,"mtime":1613658874366,"results":"58","hashOfConfig":"36"},{"size":950,"mtime":1613597869264,"results":"59","hashOfConfig":"36"},{"size":8236,"mtime":1613606381315,"results":"60","hashOfConfig":"36"},{"size":1090,"mtime":1613597869267,"results":"61","hashOfConfig":"36"},{"size":7511,"mtime":1613606059882,"results":"62","hashOfConfig":"36"},{"size":1540,"mtime":1613597869237,"results":"63","hashOfConfig":"36"},{"size":1887,"mtime":1613597869256,"results":"64","hashOfConfig":"36"},{"size":1213,"mtime":1613597869236,"results":"65","hashOfConfig":"36"},{"size":1512,"mtime":1613346108354,"results":"66","hashOfConfig":"36"},{"size":1141,"mtime":1613597869267,"results":"67","hashOfConfig":"36"},{"size":4321,"mtime":1613606338300,"results":"68","hashOfConfig":"36"},{"size":2025,"mtime":1613606296819,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1tmgdp",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yjs/Documents/GitHub/hi-nest-front/src/index.tsx",[],["145","146"],"/Users/yjs/Documents/GitHub/hi-nest-front/src/reportWebVitals.ts",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/App.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/apollo.ts",["147"],"import {\n  ApolloClient,\n  InMemoryCache,\n  makeVar,\n  createHttpLink,\n  split,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { LS_TOKEN } from \"./constants\";\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\nimport { getMainDefinition } from \"@apollo/client/utilities\";\n\nconst token = localStorage.getItem(LS_TOKEN);\nexport const isLoggedInVar = makeVar(Boolean(token));\nexport const authTokenVar = makeVar(token);\n\nconst wsLink = new WebSocketLink({\n  uri:\n      process.env.NODE_ENV === \"production\"\n          ? \"wss://nuber-eats-yjs-backend.herokuapp.com/graphql\"\n          : `ws://localhost:4000/graphql`,\n  options: {\n    reconnect: true,\n    connectionParams: {\n      \"x-jwt\": authTokenVar() || \"\",\n    },\n  },\n});\n\nconst httpLink = createHttpLink({\n  uri:\n      process.env.NODE_ENV === \"production\"\n          ? \"https://nuber-eats-yjs-backend.herokuapp.com/graphql\"\n          : \"http://localhost:4000/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  return {\n    headers: {\n      ...headers,\n      \"x-jwt\": authTokenVar() || \"\",\n    },\n  };\n});\n\nconst splitLink = split(\n    ({ query }) => {\n      const definition = getMainDefinition(query);\n      return (\n          definition.kind === \"OperationDefinition\" &&\n          definition.operation === \"subscription\"\n      );\n    },\n    wsLink,\n    authLink.concat(httpLink)\n);\n\nexport const makeLogout = () => {\n  localStorage.removeItem(LS_TOKEN);\n  isLoggedInVar(false);\n  authTokenVar(null);\n};\n\nexport const client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache({\n    typePolicies: {\n      Query: {\n        fields: {\n          isLoggedIn: {\n            read() {\n              return isLoggedInVar();\n            },\n          },\n          token: {\n            read() {\n              return authTokenVar();\n            },\n          },\n        },\n      },\n    },\n  }),\n});\n","/Users/yjs/Documents/GitHub/hi-nest-front/src/constants.ts",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/routers/logged-out-router.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/routers/logged-in-router.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/hooks/useMe.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/create-account.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/home.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/logout.tsx",["148"],"import { useApolloClient } from \"@apollo/client\";\nimport React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeLogout } from \"../../apollo\";\n\nexport const Logout = () => {\n  const history = useHistory();\n  const client = useApolloClient();\n\n  useEffect(() => {\n    client.cache.reset().then(async () => {\n      await makeLogout();\n    });\n\n    history.push(\"/\");\n  }, []);\n\n  return (\n    <div className=\"h-screen flex justify-center items-center\">\n      <span className=\"font-medium text-xl tracking-wide\">Loading...</span>\n    </div>\n  );\n};\n","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/login.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/listener/listener-home.tsx",["149","150"],"import React, { useState } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport spotifyLogoWhite from \"../../images/spotify_logo_white.svg\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {faBars, faHome, faSearch, faTimes} from \"@fortawesome/free-solid-svg-icons\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { PODCAST_FRAGMENT } from \"../../fragments\";\nimport { Search } from \"../common/search\";\nimport { MySubscriptions } from \"./my-subscriptions\";\nimport { DetailSubscription } from \"./detail-subscription\";\nimport { MyProfile } from \"../common/my-profile\";\nimport { SearchPodcasts } from \"./search-podcasts\";\n\nexport const GET_ALL_PODCASTS_QUERY = gql`\n  query GetAllPodcasts {\n    getAllPodcasts {\n      ok\n      error\n      podcasts {\n        ...PodcastParts\n      }\n    }\n    subscriptions {\n      ...PodcastParts\n    }\n  }\n  ${PODCAST_FRAGMENT}\n`;\n\nexport const ListenerHome = () => {\n  let { data: podcasts } = useQuery(GET_ALL_PODCASTS_QUERY);\n  const location = useLocation();\n  const [, path, paramId] = location.pathname.split(\"/\");\n  const [searchText, setSearchText] = useState(\"\");\n  const [leftState, setLeftState] = useState(true);\n  const toggleLeftState = () => setLeftState((leftState) => !leftState);\n\n  return (\n    <div className=\"bg-gradient-to-b from-gray-800 to-black text-gray-500\">\n      <Helmet>\n        <title>Listener | Podcast</title>\n      </Helmet>\n      <div className=\"flex flex-col min-h-screen\">\n        <div className=\"flex\" style={{ minHeight: \"calc(100vh - 80px)\" }}>\n          {leftState ? (\n            <div\n              id=\"left\"\n              className=\"bg-black text-gray-500\"\n              style={{ width: \"230px\", minHeight: \"calc(100vh - 80px)\" }}\n            >\n              <div style={{ height: \"210px\" }}>\n                <div className=\"flex justify-between pl-5 py-5\">\n                  <Link to=\"/\">\n                    <img\n                      src={spotifyLogoWhite}\n                      className=\"w-32\"\n                      alt=\"Spotify\"\n                    />\n                  </Link>\n                  <a onClick={toggleLeftState} className=\"cursor-pointer pr-5\">\n                    <FontAwesomeIcon\n                        icon={faTimes}\n                        className=\"text-2xl text-white hover:text-green-500\"\n                    />\n                  </a>\n                </div>\n                <div className=\"w-full\">\n                  <Link\n                    to=\"/\"\n                    className={`flex items-center hover:text-white mx-2 py-1 rounded-md ${\n                      location.pathname === \"/\" && \"bg-gray-800 text-white\"\n                    }`}\n                  >\n                    <span className=\"text-2xl px-3\">\n                      <FontAwesomeIcon icon={faHome} />\n                    </span>\n                    <span className=\"text-sm\">홈</span>\n                  </Link>\n                </div>\n                <div className=\"w-full\">\n                  <Link\n                    to=\"/search\"\n                    className={`flex items-center hover:text-white mx-2 py-1 rounded-md ${\n                      location.pathname === \"/search\" &&\n                      \"bg-gray-800 text-white\"\n                    }`}\n                  >\n                    <span className=\"text-2xl px-3\">\n                      <FontAwesomeIcon icon={faSearch} />\n                    </span>\n                    <span className=\"text-sm\">검색하기</span>\n                  </Link>\n                </div>\n                <div className=\"mx-5 pt-5 border-b border-gray-300 border-opacity-20\">\n                  <span className=\"font-bold text-xs text-white text-opacity-60 tracking-wider\">\n                    구독리스트\n                  </span>\n                </div>\n              </div>\n\n              <div className=\"\" style={{ maxHeight: \"calc(100vh - 290px)\" }}>\n                <ul className=\"text-sm px-5\">\n                  {podcasts?.subscriptions?.map((podcast: any) => (\n                    <li className=\"hover:text-white tracking-wider pb-3 overflow-x-hidden overflow-ellipsis whitespace-nowrap\">\n                      <Link to={`/podcasts/${podcast.id}`} key={podcast.id}>\n                        {podcast.title}\n                      </Link>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          ) : (\n            <div\n              id=\"left\"\n              className=\"bg-black text-gray-500\"\n              style={{ width: \"50px\", minHeight: \"calc(100vh - 80px)\" }}\n            >\n              <span className=\"w-full p-2 flex items-center justify-center\">\n                <a onClick={toggleLeftState} className=\"cursor-pointer\">\n                  <FontAwesomeIcon\n                    icon={faBars}\n                    className=\"text-2xl text-white hover:text-green-500\"\n                  />\n                </a>\n              </span>\n            </div>\n          )}\n\n          <div\n            style={{\n              width: leftState ? \"calc(100vw - 230px)\" : \"calc(100vw - 50px)\",\n            }}\n          >\n            <div\n              className=\"w-full flex text-white px-10 bg-gray-900 bg-opacity-95\"\n              style={{ height: \"60px\" }}\n            >\n              <Search handleOnchange={setSearchText} />\n            </div>\n            <div\n              className=\"w-full overflow-y-scroll bg-black bg-opacity-10\"\n              style={{ height: \"200px\", minHeight: \"calc(100vh - 140px)\" }}\n            >\n              {path === \"my-profile\" && <MyProfile />}\n              {path === \"podcasts\" && (\n                <DetailSubscription data={{ podcasts, paramId }} />\n              )}\n              {path === \"search\" && (\n                <SearchPodcasts data={podcasts} text={searchText} />\n              )}\n              {path !== \"my-profile\" &&\n                path !== \"podcasts\" &&\n                path !== \"search\" && (\n                  <MySubscriptions data={podcasts} text={searchText} />\n                )}\n            </div>\n          </div>\n        </div>\n        <footer\n          className=\"bg-black text-white flex items-center justify-center\"\n          style={{ height: \"80px\" }}\n        >\n          <span>player comming soon....</span>\n        </footer>\n      </div>\n    </div>\n  );\n};\n","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/404.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/host/host-home.tsx",["151","152","153"],"/Users/yjs/Documents/GitHub/hi-nest-front/src/fragments.ts",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/components/form-error.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/components/button.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/header.tsx",["154","155"],"import {\n  faUser,\n  faBars,\n  faTimes,\n  faSignOutAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMe } from \"../../hooks/useMe\";\nimport spotifyLogoWhite from \"../../images/spotify_logo_white.svg\";\n\nexport const Header: React.FC = () => {\n  const { data } = useMe();\n  const [editing, setEditing] = useState(false);\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  return (\n    <header className=\"bg-black\">\n      <div className=\"w-full px-3 py-2 xl:px-0 max-w-screen-xl mx-auto flex justify-between items-center\">\n        <Link to=\"/\">\n          <div className=\"text-sm flex items-center\">\n            <img\n              src={spotifyLogoWhite}\n              className=\"w-20 md:w-40\"\n              alt=\"Spotify\"\n            />\n          </div>\n        </Link>\n        <div className=\"flex\">\n          {data?.me ? (\n            <div className=\"flex flex-row justify-between\">\n              <div className=\"text-xs pr-3 flex items-center\">\n                <Link to=\"/my-profile\" className=\"hover:text-green-500\">\n                  <div className=\"w-full p-2 rounded-3xl border-2 border-white\">\n                    <FontAwesomeIcon\n                      icon={faUser}\n                      className=\"text-sm text-white\"\n                    />\n                  </div>\n                </Link>\n              </div>\n              <div className=\"w-full p-2 text-white hidden md:block\">\n                <Link\n                  to=\"/logout\"\n                  className=\"flex items-center hover:text-green-500\"\n                >\n                  <FontAwesomeIcon icon={faSignOutAlt} className=\"text-2xl\" />\n                  <span className=\"\">로그아웃</span>\n                </Link>\n              </div>\n            </div>\n          ) : (\n            <div className=\"hidden md:block text-white font-bold\">\n              <span className=\"pr-8\">\n                <Link to=\"/create-account\" className=\"hover:text-green-500\">\n                  가입하기\n                </Link>\n              </span>\n              <span className=\"pr-8\">\n                <Link to=\"/login\" className=\"hover:text-green-500\">\n                  로그인하기\n                </Link>\n              </span>\n            </div>\n          )}\n          <span className=\"w-full p-2 md:hidden\">\n            <a onClick={toggleEditing} className=\"cursor-pointer\">\n              <FontAwesomeIcon\n                icon={faBars}\n                className=\"text-2xl text-white hover:text-green-500\"\n              />\n            </a>\n          </span>\n        </div>\n        {editing ? (\n          <div className=\"flex absolute left-full md:hidden\">\n            <div className=\"left-0 bg-black w-screen h-screen fixed top-0 opacity-50 z-40\">\n              {\"\"}\n            </div>\n            <nav className=\"flex flex-col justify-between right-0 bg-black border-0 m-0 p-8 h-screen fixed top-0 w-80 z-40 text-white font-bold\">\n              <div className=\"flex flex-row justify-between\">\n                <ul>\n                  <li className=\"text-3xl pb-6\">\n                    {!data?.me ? (\n                      <Link\n                        to=\"/create-account\"\n                        onClick={toggleEditing}\n                        className=\"hover:text-green-500\"\n                      >\n                        가입하기\n                      </Link>\n                    ) : (\n                      <Link\n                        to=\"/my-profile\"\n                        onClick={toggleEditing}\n                        className=\"hover:text-green-500\"\n                      >\n                        계정\n                      </Link>\n                    )}\n                  </li>\n                  <li className=\"text-3xl pb-6\">\n                    {!data?.me ? (\n                      <Link\n                        to=\"/login\"\n                        onClick={toggleEditing}\n                        className=\"hover:text-green-500\"\n                      >\n                        로그인하기\n                      </Link>\n                    ) : (\n                      <Link\n                        to=\"/logout\"\n                        onClick={toggleEditing}\n                        className=\"hover:text-green-500\"\n                      >\n                        로그아웃하기\n                      </Link>\n                    )}\n                  </li>\n                </ul>\n                <span>\n                  <a\n                    type=\"button\"\n                    onClick={toggleEditing}\n                    className=\"text-white z-50 cursor-pointer\"\n                  >\n                    <FontAwesomeIcon\n                      icon={faTimes}\n                      className=\"text-2xl text-white hover:text-green-500\"\n                    />\n                  </a>\n                </span>\n              </div>\n              <Link to=\"/\">\n                <div className=\"text-sm flex items-center\">\n                  <img src={spotifyLogoWhite} className=\"w-20\" alt=\"Spotify\" />\n                </div>\n              </Link>\n            </nav>\n          </div>\n        ) : (\n          ``\n        )}\n      </div>\n    </header>\n  );\n};\n","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/footer.tsx",["156","157"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport spotifyLogoWhite from \"../../images/spotify_logo_white.svg\";\nimport instagramIcon from \"../../images/instagram_icon.svg\";\nimport facebookIcon from \"../../images/facebook_icon.svg\";\n\nexport const Footer: React.FC = () => {\n  const detailInfo = () => {\n    alert(\"비밀~ ^.^;\");\n  };\n  const recruitInfo = () => {\n    alert(\"힝 속았지~? ^.~\");\n  };\n  return (\n    <footer className=\"bg-black xl:w-full\">\n      <div className=\"w-full px-3 py-16 xl:px-0 flex flex-col items-start sm:flex-col sm:items-start lg:flex-row lg:justify-around\">\n        <Link to=\"/\" className=\"mb-12 md:px-20\">\n          <div className=\"text-sm flex items-center\">\n            <img\n              src={spotifyLogoWhite}\n              className=\"w-20 lg:w-48\"\n              alt=\"Spotify\"\n            />\n          </div>\n        </Link>\n        <div className=\"flex flex-col md:px-20 md:w-full md:flex-row md:justify-between\">\n          <div className=\"text-white flex flex-col items-start mb-12\">\n            <span className=\"text-gray-500 text-xs font-bold\">회사</span>\n            <span className=\"pt-3 text-sm font-bold\">\n              <a onClick={detailInfo} className=\"cursor-pointer\">\n                상세정보\n              </a>\n            </span>\n            <span className=\"pt-3 text-sm font-bold\">\n              <a onClick={recruitInfo} className=\"cursor-pointer\">\n                채용정보\n              </a>\n            </span>\n          </div>\n          <div className=\"text-white flex flex-col items-start mb-12\">\n            <span className=\"text-gray-500 text-xs font-bold\">커뮤니티</span>\n            <span className=\"pt-3 text-sm font-bold\">\n              <a href=\"https://nomadcoders.co/users/mdotcom12\">개발자</a>\n            </span>\n            <span className=\"pt-3 text-sm font-bold\">\n              <a href=\"https://nomadcoders.co/users/mdotcom12\">투자자</a>\n            </span>\n            <span className=\"pt-3 text-sm font-bold\">\n              <a href=\"https://nomadcoders.co/users/serranoarevalo\">공급업체</a>\n            </span>\n          </div>\n          <div className=\"text-white flex flex-col items-start mb-12\">\n            <span className=\"text-gray-500 text-xs font-bold\">\n              노마드코더 링크\n            </span>\n            <span className=\"pt-3 text-sm font-bold\">\n              <a href=\"https://nomadcoders.co/courses\">코스</a>\n            </span>\n            <span className=\"pt-3 text-sm font-bold\">\n              <a href=\"https://nomadcoders.co/challenges\">챌린지</a>\n            </span>\n            <span className=\"pt-3 text-sm font-bold\">\n              <a href=\"https://nomadcoders.co/community\">수다방</a>\n            </span>\n            <span className=\"pt-3 text-sm font-bold\">\n              <a href=\"https://nomadcoders.co/faq\">FAQ</a>\n            </span>\n            <span className=\"pt-3 text-sm font-bold\">\n              <a href=\"https://nomadcoders.co/roadmap\">로드맵</a>\n            </span>\n          </div>\n        </div>\n        <ul className=\"flex flex-row justify-start md:px-20\">\n          <li className=\"mr-3\">\n            <a\n              href=\"https://instagram.com/1985yjs\"\n              className=\"rounded-3xl bg-gray-800 w-10 h-10 inline-flex items-center justify-center\"\n              title=\"Instagram\"\n            >\n              <img\n                src={instagramIcon}\n                className=\"w-5 h-5 bg-white\"\n                alt=\"instagram\"\n              />\n            </a>\n          </li>\n          <li className=\"mr-3\">\n            <a\n              href=\"https://facebook.com/jeongsik.yeo/\"\n              className=\"rounded-3xl bg-gray-800 w-10 h-10 inline-flex items-center justify-center\"\n              title=\"Facebook\"\n            >\n              <img\n                src={facebookIcon}\n                className=\"w-5 h-5 bg-white\"\n                alt=\"facebook\"\n              />\n            </a>\n          </li>\n        </ul>\n      </div>\n    </footer>\n  );\n};\n","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/host/my-podcasts.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/host/detail-podcast.tsx",["158"],"import React from \"react\";\nimport podcastDefault from \"../../images/podcast_default.svg\";\nimport { useState } from \"react\";\nimport { Episodes } from \"../../components/episodes\";\nimport { EditPodcast } from \"./edit-podcast\";\n\ninterface IPodcast {\n  id: number;\n  title: string;\n  category: string;\n  description: string;\n  episodes: any;\n}\n\nexport const DetailPodcast = (props: any) => {\n  const podcast: IPodcast = props.data.podcasts?.myPodcasts.podcasts.find(\n    (podcast: IPodcast) => podcast.id === +props.data.paramId\n  );\n\n  const [editBoxState, setEditBoxState] = useState(false);\n  const onEditBoxClick = () =>\n    setEditBoxState((editBoxState) => (editBoxState = !editBoxState));\n\n  return (\n    <div className=\"w-full py-5 px-10\" style={{minWidth: \"500px\"}}>\n      <div className=\"w-full h-52 flex items-end\">\n        <div className=\"mb-5 mr-5 flex items-end shadow-2xl\">\n          <img\n            src={podcastDefault}\n            className=\"bg-gray-700\"\n            style={{width:\"200px\", height:\"200px\"}}\n            alt=\"podcast default\"\n          />\n        </div>\n        <div className=\"w-auto mb-5 flex flex-col items-start\">\n          <span className=\"text-sm text-white text-opacity-50\">\n            {podcast?.category}\n          </span>\n          <span className=\"text-5xl text-white font-bold pt-1 pb-2\">\n            <a onClick={onEditBoxClick} className=\"cursor-pointer\">\n              {podcast?.title}\n            </a>\n          </span>\n          <span className=\"text-sm text-white text-opacity-70\">\n            {podcast?.description}\n          </span>\n        </div>\n      </div>\n      <div>\n        <div className=\"w-full\">\n          <div className=\"flex flex-col\">\n            {podcast?.episodes.length > 0 ? (\n              <section\n                className=\"grid gap-4 grid-cols-4 text-xs h-15 border-b border-solid border-gray-700 border-opacity-50 pb-2\"\n                style={{\n                  gridTemplateColumns:\n                    \"[index] 16px [first] 6fr [var1] 4fr [last] minmax(120px,1fr)\",\n                }}\n              >\n                <span className=\"pl-5\">#</span>\n                <span>제목</span>\n                <span>앨범</span>\n                <span>재생시간</span>\n              </section>\n            ) : (\n              <section className=\"h-15 text-2xl text-white font-medium pl-5 py-2 mt-5\">\n                <span>플레이리스트에 추가할 곡을 찾아보세요</span>\n              </section>\n            )}\n            {podcast?.episodes.map((episode: any, index: number) => (\n              <Episodes data={{ episode, index }} />\n            ))}\n          </div>\n        </div>\n      </div>\n      {editBoxState && (\n        <EditPodcast podcast={podcast} editBoxState={editBoxState} onEditBoxClick={onEditBoxClick} />\n      )}\n    </div>\n  );\n};\n","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/search.tsx",["159","160"],"/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/host/podcast.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/host/edit-podcast.tsx",["161"],"/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/listener/my-subscriptions.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/listener/detail-subscription.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/components/episodes.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/my-profile.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/__generated__/globalTypes.ts",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/common/podcast-search.tsx",["162"],"/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/listener/search-podcasts.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/components/search-api-episodes.tsx",["163"],"/Users/yjs/Documents/GitHub/hi-nest-front/src/components/thumbnail.tsx",[],{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":46,"column":7,"nodeType":"170","messageId":"171","endLine":46,"endColumn":16},{"ruleId":"172","severity":1,"message":"173","line":16,"column":6,"nodeType":"174","endLine":16,"endColumn":8,"suggestions":"175"},{"ruleId":"176","severity":1,"message":"177","line":61,"column":19,"nodeType":"178","endLine":61,"endColumn":80},{"ruleId":"176","severity":1,"message":"177","line":121,"column":17,"nodeType":"178","endLine":121,"endColumn":73},{"ruleId":"176","severity":1,"message":"177","line":127,"column":19,"nodeType":"178","endLine":127,"endColumn":80},{"ruleId":"176","severity":1,"message":"177","line":166,"column":17,"nodeType":"178","endLine":169,"endColumn":18},{"ruleId":"176","severity":1,"message":"177","line":214,"column":17,"nodeType":"178","endLine":214,"endColumn":73},{"ruleId":"176","severity":1,"message":"177","line":68,"column":13,"nodeType":"178","endLine":68,"endColumn":67},{"ruleId":"176","severity":1,"message":"177","line":124,"column":19,"nodeType":"178","endLine":128,"endColumn":20},{"ruleId":"176","severity":1,"message":"177","line":30,"column":15,"nodeType":"178","endLine":30,"endColumn":66},{"ruleId":"176","severity":1,"message":"177","line":35,"column":15,"nodeType":"178","endLine":35,"endColumn":67},{"ruleId":"176","severity":1,"message":"177","line":40,"column":13,"nodeType":"178","endLine":40,"endColumn":68},{"ruleId":"176","severity":1,"message":"177","line":33,"column":11,"nodeType":"178","endLine":36,"endColumn":12},{"ruleId":"176","severity":1,"message":"177","line":41,"column":11,"nodeType":"178","endLine":44,"endColumn":12},{"ruleId":"176","severity":1,"message":"177","line":126,"column":15,"nodeType":"178","endLine":129,"endColumn":16},{"ruleId":"168","severity":1,"message":"179","line":4,"column":10,"nodeType":"170","messageId":"171","endLine":4,"endColumn":23},{"ruleId":"176","severity":1,"message":"177","line":130,"column":11,"nodeType":"178","endLine":130,"endColumn":40},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],"@typescript-eslint/no-unused-vars","'splitLink' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'client.cache' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["182"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'PODCAST_QUERY' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"183","fix":"184"},"Update the dependencies array to be: [client.cache, history]",{"range":"185","text":"186"},[409,411],"[client.cache, history]"]