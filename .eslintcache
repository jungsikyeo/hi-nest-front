[{"/Users/yjs/Documents/GitHub/hi-nest-front/src/index.tsx":"1","/Users/yjs/Documents/GitHub/hi-nest-front/src/reportWebVitals.ts":"2","/Users/yjs/Documents/GitHub/hi-nest-front/src/apollo.ts":"3","/Users/yjs/Documents/GitHub/hi-nest-front/src/App.tsx":"4","/Users/yjs/Documents/GitHub/hi-nest-front/src/constants.ts":"5","/Users/yjs/Documents/GitHub/hi-nest-front/src/routers/logged-in-router.tsx":"6","/Users/yjs/Documents/GitHub/hi-nest-front/src/routers/logged-out-router.tsx":"7","/Users/yjs/Documents/GitHub/hi-nest-front/src/components/header.tsx":"8","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/404.tsx":"9","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/login.tsx":"10","/Users/yjs/Documents/GitHub/hi-nest-front/src/hooks/useMe.tsx":"11","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/create-account.tsx":"12","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/client/hosts.tsx":"13","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/client/listeners.tsx":"14","/Users/yjs/Documents/GitHub/hi-nest-front/src/__generated__/globalTypes.ts":"15","/Users/yjs/Documents/GitHub/hi-nest-front/src/components/button.tsx":"16","/Users/yjs/Documents/GitHub/hi-nest-front/src/components/form-error.tsx":"17","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/logout.tsx":"18","/Users/yjs/Documents/GitHub/hi-nest-front/src/components/footer.tsx":"19","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/home.tsx":"20"},{"size":725,"mtime":1612365860221,"results":"21","hashOfConfig":"22"},{"size":440,"mtime":1612365860224,"results":"23","hashOfConfig":"22"},{"size":1111,"mtime":1612609790807,"results":"24","hashOfConfig":"22"},{"size":366,"mtime":1612365860216,"results":"25","hashOfConfig":"22"},{"size":33,"mtime":1612365860220,"results":"26","hashOfConfig":"22"},{"size":1769,"mtime":1612703269717,"results":"27","hashOfConfig":"22"},{"size":877,"mtime":1612703068298,"results":"28","hashOfConfig":"22"},{"size":5299,"mtime":1612688151773,"results":"29","hashOfConfig":"22"},{"size":1688,"mtime":1612652055461,"results":"30","hashOfConfig":"22"},{"size":4811,"mtime":1612702674232,"results":"31","hashOfConfig":"22"},{"size":266,"mtime":1612365860220,"results":"32","hashOfConfig":"22"},{"size":5246,"mtime":1612646231216,"results":"33","hashOfConfig":"22"},{"size":297,"mtime":1612646607699,"results":"34","hashOfConfig":"22"},{"size":191,"mtime":1612700667558,"results":"35","hashOfConfig":"22"},{"size":707,"mtime":1612366451519,"results":"36","hashOfConfig":"22"},{"size":508,"mtime":1612656575319,"results":"37","hashOfConfig":"22"},{"size":229,"mtime":1612365860220,"results":"38","hashOfConfig":"22"},{"size":582,"mtime":1612702674155,"results":"39","hashOfConfig":"22"},{"size":4093,"mtime":1612627626162,"results":"40","hashOfConfig":"22"},{"size":293,"mtime":1612690047368,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1tmgdp",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yjs/Documents/GitHub/hi-nest-front/src/index.tsx",[],["87","88"],"/Users/yjs/Documents/GitHub/hi-nest-front/src/reportWebVitals.ts",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/apollo.ts",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/App.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/constants.ts",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/routers/logged-in-router.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/routers/logged-out-router.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/components/header.tsx",["89","90"],"import {\n  faUser,\n  faBars,\n  faTimes,\n  faSignOutAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMe } from \"../hooks/useMe\";\nimport spotifyLogoWhite from \"../images/spotify_logo_white.svg\";\n\nexport const Header: React.FC = () => {\n  const { data } = useMe();\n  const [editing, setEditing] = useState(false);\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  return (\n    <header className=\"bg-black\">\n      <div className=\"w-full px-3 py-2 xl:px-0 max-w-screen-xl mx-auto flex justify-between items-center\">\n        <Link to=\"/\">\n          <div className=\"text-sm flex items-center\">\n            <img\n              src={spotifyLogoWhite}\n              className=\"w-20 md:w-40\"\n              alt=\"Spotify\"\n            />\n          </div>\n        </Link>\n        <div className=\"flex\">\n          {data?.me ? (\n            <div className=\"flex flex-row justify-between\">\n              <div className=\"text-xs pr-3 flex items-center\">\n                <Link to=\"/my-profile\" className=\"hover:text-green-500\">\n                  <div className=\"w-full p-2 rounded-3xl border-2 border-white\">\n                    <FontAwesomeIcon\n                      icon={faUser}\n                      className=\"text-sm text-white\"\n                    />\n                  </div>\n                </Link>\n              </div>\n              <div className=\"w-full p-2 text-white hidden md:block\">\n                <Link\n                  to=\"/logout\"\n                  className=\"flex items-center hover:text-green-500\"\n                >\n                  <FontAwesomeIcon icon={faSignOutAlt} className=\"text-2xl\" />\n                  <span className=\"\">로그아웃</span>\n                </Link>\n              </div>\n            </div>\n          ) : (\n            <div className=\"hidden md:block text-white font-bold\">\n              <span className=\"pr-8\">\n                <Link to=\"/create-account\" className=\"hover:text-green-500\">\n                  가입하기\n                </Link>\n              </span>\n              <span className=\"pr-8\">\n                <Link to=\"/login\" className=\"hover:text-green-500\">\n                  로그인하기\n                </Link>\n              </span>\n            </div>\n          )}\n          <span className=\"w-full p-2 md:hidden\">\n            <a onClick={toggleEditing} className=\"cursor-pointer\">\n              <FontAwesomeIcon\n                icon={faBars}\n                className=\"text-2xl text-white hover:text-green-500\"\n              />\n            </a>\n          </span>\n        </div>\n        {editing ? (\n          <div className=\"flex absolute left-full md:hidden\">\n            <div className=\"left-0 bg-black w-screen h-screen fixed top-0 opacity-50 z-40\">\n              {\"\"}\n            </div>\n            <nav className=\"flex flex-col justify-between right-0 bg-black border-0 m-0 p-8 h-screen fixed top-0 w-80 z-40 text-white font-bold\">\n              <div className=\"flex flex-row justify-between\">\n                <ul>\n                  <li className=\"text-3xl pb-6\">\n                    {!data?.me ? (\n                      <Link\n                        to=\"/create-account\"\n                        onClick={toggleEditing}\n                        className=\"hover:text-green-500\"\n                      >\n                        가입하기\n                      </Link>\n                    ) : (\n                      <Link\n                        to=\"/my-profile\"\n                        onClick={toggleEditing}\n                        className=\"hover:text-green-500\"\n                      >\n                        계정\n                      </Link>\n                    )}\n                  </li>\n                  <li className=\"text-3xl pb-6\">\n                    {!data?.me ? (\n                      <Link\n                        to=\"/login\"\n                        onClick={toggleEditing}\n                        className=\"hover:text-green-500\"\n                      >\n                        로그인하기\n                      </Link>\n                    ) : (\n                      <Link\n                        to=\"/logout\"\n                        onClick={toggleEditing}\n                        className=\"hover:text-green-500\"\n                      >\n                        로그아웃하기\n                      </Link>\n                    )}\n                  </li>\n                </ul>\n                <span>\n                  <a\n                    type=\"button\"\n                    onClick={toggleEditing}\n                    className=\"text-white z-50 cursor-pointer\"\n                  >\n                    <FontAwesomeIcon\n                      icon={faTimes}\n                      className=\"text-2xl text-white hover:text-green-500\"\n                    />\n                  </a>\n                </span>\n              </div>\n              <Link to=\"/\">\n                <div className=\"text-sm flex items-center\">\n                  <img src={spotifyLogoWhite} className=\"w-20\" alt=\"Spotify\" />\n                </div>\n              </Link>\n            </nav>\n          </div>\n        ) : (\n          ``\n        )}\n      </div>\n    </header>\n  );\n};\n","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/404.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/login.tsx",["91"],"import { gql, useMutation, useReactiveVar } from \"@apollo/client\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useForm } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\nimport { authTokenVar, isLoggedInVar } from \"../apollo\";\nimport { Button } from \"../components/button\";\nimport { FormError } from \"../components/form-error\";\nimport { LS_TOKEN } from \"../constants\";\nimport spotifyLogo from \"../images/spotify_logo.svg\";\nimport {\n  loginMutation,\n  loginMutationVariables,\n} from \"../__generated__/loginMutation\";\n\nconst LOGIN_MUTATION = gql`\n  mutation loginMutation($loginInput: LoginInput!) {\n    login(input: $loginInput) {\n      ok\n      token\n      error\n    }\n  }\n`;\n\ninterface ILoginForm {\n  email: string;\n  password: string;\n}\n\nexport const Login = () => {\n  const { register, getValues, errors, handleSubmit, formState } = useForm<\n    ILoginForm\n  >({\n    mode: \"onChange\",\n  });\n  const onCompleted = (data: loginMutation) => {\n    const {\n      login: { ok, token },\n    } = data;\n    if (ok && token) {\n      localStorage.setItem(LS_TOKEN, token);\n      authTokenVar(token);\n      isLoggedInVar(true);\n    }\n  };\n  const [loginMutation, { data: loginMutationResult, loading }] = useMutation<\n    loginMutation,\n    loginMutationVariables\n  >(LOGIN_MUTATION, {\n    onCompleted,\n  });\n  const onSubmit = () => {\n    if (!loading) {\n      const { email, password } = getValues();\n      loginMutation({\n        variables: {\n          loginInput: {\n            email,\n            password,\n          },\n        },\n      });\n    }\n  };\n  return (\n    <div className=\"h-screen flex items-center flex-col mt-2.5 md:mt-6 lg:mt-6\">\n      <Helmet>\n        <title>Login | Podcast</title>\n      </Helmet>\n      <div className=\"w-full max-w-screen-2xl flex flex-col items-center border-b border-solid border-gray-300\">\n        <img\n          src={spotifyLogo}\n          className=\"w-32 lg:w-48 md:w-48 mb-2.5 md:mb-6 lg:mb-6\"\n          alt=\"Spotify\"\n        />\n      </div>\n      <div className=\"w-full max-w-screen-sm flex flex-col px-5 items-center\">\n        <h4 className=\"w-full pt-8 font-bold text-center text-base mb-5\">\n          계속하려면 Spotify에 로그인하세요.\n        </h4>\n        <form\n          onSubmit={handleSubmit(onSubmit)}\n          className=\"grid gap-3 mt-5 w-full mb-5\"\n        >\n          <h4 className=\"w-full font-bold text-left text-sm\">이메일 주소</h4>\n          <input\n            ref={register({\n              required: \"Spotify 이메일 주소를 입력하세요.\",\n              pattern: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n            })}\n            name=\"email\"\n            required\n            type=\"email\"\n            placeholder=\"이메일 주소\"\n            className=\"focus:outline-none focus:border-gray-500 p-2 border border-gray-300 text-sm font-bold border-gray-200 transition-colors\"\n          />\n          {errors.email?.message && (\n            <FormError errorMessage={errors.email?.message} />\n          )}\n          {errors.email?.type === \"pattern\" && (\n            <FormError errorMessage={\"Please enter a valid email\"} />\n          )}\n          <h4 className=\"w-full font-bold text-left text-sm\">비밀번호</h4>\n          <input\n            ref={register({ required: \"Password is required\" })}\n            required\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"비밀번호\"\n            className=\"focus:outline-none focus:border-gray-500 p-2 border border-gray-300 text-sm font-bold border-gray-200 transition-colors\"\n          />\n          {errors.password?.message && (\n            <FormError errorMessage={errors.password?.message} />\n          )}\n          {errors.password?.type === \"minLength\" && (\n            <FormError errorMessage=\"Password must be more than 10 chars.\" />\n          )}\n          <Button\n            canClick={formState.isValid}\n            loading={loading}\n            actionText={\"로그인하기\"}\n          />\n          {loginMutationResult?.login.error && (\n            <FormError errorMessage={loginMutationResult.login.error} />\n          )}\n        </form>\n        <div className=\"w-full flex flex-col items-center\">\n          <h4 className=\"w-full pt-4 font-bold text-center text-base mb-5\">\n            계정이 없나요?\n          </h4>\n          <Link\n            to=\"/create-account\"\n            className=\"w-full h-11 flex flex-col items-center justify-center border-2 border-solid rounded-3xl border-gray-500 font-bold text-gray-500 hover:bg-gray-500 hover:text-white transition-colors\"\n          >\n            SPOTIFY에 가입하기\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/Users/yjs/Documents/GitHub/hi-nest-front/src/hooks/useMe.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/create-account.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/client/hosts.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/client/listeners.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/__generated__/globalTypes.ts",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/components/button.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/components/form-error.tsx",[],"/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/logout.tsx",["92"],"import { useApolloClient } from \"@apollo/client\";\nimport React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeLogout } from \"../apollo\";\n\nexport const Logout = () => {\n  const history = useHistory();\n  const client = useApolloClient();\n\n  useEffect(() => {\n    client.cache.reset().then(async () => {\n      await makeLogout();\n    });\n\n    history.push(\"/\");\n  }, []);\n\n  return (\n    <div className=\"h-screen flex justify-center items-center\">\n      <span className=\"font-medium text-xl tracking-wide\">Loading...</span>\n    </div>\n  );\n};\n","/Users/yjs/Documents/GitHub/hi-nest-front/src/components/footer.tsx",["93","94","95"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMe } from \"../hooks/useMe\";\nimport spotifyLogoWhite from \"../images/spotify_logo_white.svg\";\nimport instagramIcon from \"../images/instagram_icon.svg\";\nimport facebookIcon from \"../images/facebook_icon.svg\";\n\nexport const Footer: React.FC = () => {\n  const { data } = useMe();\n  const detailInfo = () => {\n    alert(\"비밀~ ^.^;\");\n  };\n  const recruitInfo = () => {\n    alert(\"힝 속았지~? ^.~\");\n  };\n  return (\n    <footer className=\"bg-black\">\n      <div className=\"w-full px-3 py-16 xl:px-0 flex flex-col items-start sm:flex-col sm:items-start lg:flex-row lg:justify-around\">\n        <Link to=\"/\" className=\"mb-12 md:px-20\">\n          <div className=\"text-sm flex items-center\">\n            <img\n              src={spotifyLogoWhite}\n              className=\"w-20 lg:w-48\"\n              alt=\"Spotify\"\n            />\n          </div>\n        </Link>\n        <div className=\"flex flex-col md:px-20 md:w-full md:flex-row md:justify-between\">\n          <div className=\"text-white flex flex-col items-start mb-12\">\n            <span className=\"text-gray-500 text-xs font-bold\">회사</span>\n            <span className=\"pt-3 text-sm font-bold\">\n              <a onClick={detailInfo} className=\"cursor-pointer\">\n                상세정보\n              </a>\n            </span>\n            <span className=\"pt-3 text-sm font-bold\">\n              <a onClick={recruitInfo} className=\"cursor-pointer\">\n                채용정보\n              </a>\n            </span>\n          </div>\n          <div className=\"text-white flex flex-col items-start mb-12\">\n            <span className=\"text-gray-500 text-xs font-bold\">커뮤니티</span>\n            <span className=\"pt-3 text-sm font-bold\">\n              <a href=\"https://nomadcoders.co/users/mdotcom12\">개발자</a>\n            </span>\n            <span className=\"pt-3 text-sm font-bold\">\n              <a href=\"https://nomadcoders.co/users/mdotcom12\">투자자</a>\n            </span>\n            <span className=\"pt-3 text-sm font-bold\">\n              <a href=\"https://nomadcoders.co/users/serranoarevalo\">공급업체</a>\n            </span>\n          </div>\n          <div className=\"text-white flex flex-col items-start mb-12\">\n            <span className=\"text-gray-500 text-xs font-bold\">\n              노마드코더 링크\n            </span>\n            <span className=\"pt-3 text-sm font-bold\">\n              <a href=\"https://nomadcoders.co/courses\">코스</a>\n            </span>\n            <span className=\"pt-3 text-sm font-bold\">\n              <a href=\"https://nomadcoders.co/challenges\">챌린지</a>\n            </span>\n            <span className=\"pt-3 text-sm font-bold\">\n              <a href=\"https://nomadcoders.co/community\">수다방</a>\n            </span>\n            <span className=\"pt-3 text-sm font-bold\">\n              <a href=\"https://nomadcoders.co/faq\">FAQ</a>\n            </span>\n            <span className=\"pt-3 text-sm font-bold\">\n              <a href=\"https://nomadcoders.co/roadmap\">로드맵</a>\n            </span>\n          </div>\n        </div>\n        <ul className=\"flex flex-row justify-start md:px-20\">\n          <li className=\"mr-3\">\n            <a\n              href=\"https://instagram.com/1985yjs\"\n              className=\"rounded-3xl bg-gray-800 w-10 h-10 inline-flex items-center justify-center\"\n              title=\"Instagram\"\n            >\n              <img\n                src={instagramIcon}\n                className=\"w-5 h-5 bg-white\"\n                alt=\"instagram\"\n              />\n            </a>\n          </li>\n          <li className=\"mr-3\">\n            <a\n              href=\"https://facebook.com/jeongsik.yeo/\"\n              className=\"rounded-3xl bg-gray-800 w-10 h-10 inline-flex items-center justify-center\"\n              title=\"Facebook\"\n            >\n              <img\n                src={facebookIcon}\n                className=\"w-5 h-5 bg-white\"\n                alt=\"facebook\"\n              />\n            </a>\n          </li>\n        </ul>\n      </div>\n    </footer>\n  );\n};\n","/Users/yjs/Documents/GitHub/hi-nest-front/src/pages/home.tsx",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":68,"column":13,"nodeType":"102","endLine":68,"endColumn":67},{"ruleId":"100","severity":1,"message":"101","line":124,"column":19,"nodeType":"102","endLine":128,"endColumn":20},{"ruleId":"103","severity":1,"message":"104","line":1,"column":28,"nodeType":"105","messageId":"106","endLine":1,"endColumn":42},{"ruleId":"107","severity":1,"message":"108","line":16,"column":6,"nodeType":"109","endLine":16,"endColumn":8,"suggestions":"110"},{"ruleId":"103","severity":1,"message":"111","line":9,"column":11,"nodeType":"105","messageId":"106","endLine":9,"endColumn":15},{"ruleId":"100","severity":1,"message":"101","line":32,"column":15,"nodeType":"102","endLine":32,"endColumn":66},{"ruleId":"100","severity":1,"message":"101","line":37,"column":15,"nodeType":"102","endLine":37,"endColumn":67},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","@typescript-eslint/no-unused-vars","'useReactiveVar' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'client.cache' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["114"],"'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},"Update the dependencies array to be: [client.cache, history]",{"range":"117","text":"118"},[410,412],"[client.cache, history]"]